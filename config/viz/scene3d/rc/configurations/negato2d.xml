<extension implements="sight::app::extension::config">
    <id>sight::config::viz::scene3d::negato2d</id>
    <parameters>
        <object uid="image" type="sight::data::image_series" deferred="true" />
        <object uid="transferFunction" type="sight::data::transfer_function" />

        <param name="WID_PARENT" />
        <param name="sliceIndex" default="axial" />
        <param name="classification" default="post" />
        <param name="filtering" default="linear" />
        <param name="enableSliceType" default="true" />
        <param name="WORLD_COORDS_LANDMARKS_CHANNEL" default="WORLD_COORDS_LANDMARKS_CHANNEL" />
        <param name="TOGGLE_VIEW_VISIBILITY_SENDER_CHANNEL" default="TOGGLE_VIEW_VISIBILITY_SENDER_CHANNEL" />
        <param name="RULER_ACTIVATION_CHANNEL" default="RULER_ACTIVATION_CHANNEL" />
        <param name="RULER_DEACTIVATION_CHANNEL" default="RULER_DEACTIVATION_CHANNEL" />
        <param name="VISIBILITY_RULERS_RECEIVER_CHANNEL" />
        <param name="LANDMARKS_EDIT_MODE_RECEIVER_CHANNEL" default="LANDMARKS_EDIT_MODE_RECEIVER_CHANNEL" />
        <param name="LANDMARKS_GROUP_SELECTED_RECEIVER_CHANNEL" default="LANDMARKS_GROUP_SELECTED_RECEIVER_CHANNEL" />
        <param name="LANDMARKS_EDIT_MODE_CHANGED_SENDER_CHANNEL" default="LANDMARKS_EDIT_MODE_CHANGED_SENDER_CHANNEL" />
    </parameters>

    <config>
        <!-- ******************************* UI declaration *********************************** -->

        <service uid="mainView" type="sight::module::ui::view">
            <gui>
                <layout type="sight::ui::layout::overlay">
                    <view />
                    <view x="0" y="0" />
                </layout>
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <view sid="sceneView" />
                <view sid="toolbarView" />
            </registry>
        </service>

        <service uid="sceneView" type="sight::module::ui::view">
            <gui>
                <layout type="sight::ui::layout::line">
                    <orientation value="vertical" />
                    <view proportion="1" />
                    <view proportion="0" QSSClass="view_background" spacing="0" />
                </layout>
            </gui>
            <registry>
                <view sid="sceneSrv" />
                <view wid="negatoSliderView" />
            </registry>
        </service>

        <service uid="toolbarView" type="sight::module::ui::view">
            <gui>
                <toolbar background_color="#00000000" />
                <layout type="sight::ui::layout::line">
                    <orientation value="vertical" />
                </layout>
            </gui>
            <registry>
                <toolbar sid="toolbar" />
            </registry>
        </service>

        <service uid="toolbar" type="sight::module::ui::toolbar">
            <gui>
                <layout>
                    <menuItem name="Maximize" icon="sight::module::ui::icons/maximize.svg" />
                    <menuItem name="Minimize" icon="sight::module::ui::icons/restore.svg" />
                    <spacer />
                </layout>
            </gui>
            <registry>
                <menuItem sid="maximizeAct" />
                <menuItem sid="minimizeAct" />
            </registry>
        </service>

        <service uid="maximizeAct" type="sight::module::ui::action">
            <state visible="true" />
        </service>

        <service uid="minimizeAct" type="sight::module::ui::action">
            <state visible="false" />
        </service>

        <service uid="sceneSrv" type="sight::viz::scene3d::render">
            <scene>
                <background color="#303A65" />

                <layer id="negatoLayer" order="1">
                    <adaptor uid="negatoAdp" />
                    <adaptor uid="ruler_fiducial_adp" />
                    <adaptor uid="negatoCameraAdp" />
                    <adaptor uid="pickerInteractorAdp" />
                    <adaptor uid="landmarksAdp" />
                    <adaptor uid="pickedVoxelTextAdp" />
                    <adaptor uid="eventAdp" />
                </layer>
            </scene>
        </service>

        <service uid="negatoAdp" type="sight::module::viz::scene3d::adaptor::negato2d">
            <in key="image" uid="${image}" />
            <inout key="tf" uid="${transferFunction}" />
            <config orientation="${sliceIndex}" filtering="${filtering}" />
            <properties classification="${classification}" />
        </service>

        <service uid="ruler_fiducial_adp" type="sight::module::viz::scene3d_qt::adaptor::fiducials::ruler" auto_connect="true">
            <inout key="image" uid="${image}" />
            <config font_size="16" query_flags="0x40000000" orientation="${sliceIndex}" />
            <properties radius="1.5" />
        </service>

        <service uid="negatoCameraAdp" type="sight::module::viz::scene3d::adaptor::negato2d_camera">
            <inout key="image" uid="${image}" />
            <config priority="0" orientation="${sliceIndex}" />
        </service>

        <service uid="pickerInteractorAdp" type="sight::module::viz::scene3d::adaptor::picker">
            <config queryMask="0x40000000" />
        </service>

        <service uid="landmarksAdp" type="sight::module::viz::scene3d_qt::adaptor::fiducials::point" auto_connect="true">
            <inout key="imageSeries" uid="${image}" />
            <config label="false" orientation="${sliceIndex}" priority="4" initialGroup="Group_0" initialSize="10.0" />
        </service>

        <service uid="pickedVoxelTextAdp" type="sight::module::viz::scene3d::adaptor::text">
            <config x="0.01" y="0.01" hAlign="right" vAlign="top" color="#ffc000" />
        </service>

        <service uid="eventAdp" type="sight::module::viz::scene3d::adaptor::event">
            <event type="buttonDoublePress" buttons="left" modifiers="none" />
        </service>

        <!-- ************************************* Services ************************************ -->

        <service uid="negatoSliderCfg" type="sight::app::config_launcher">
            <properties config="sight::config::viz::image::imageSlider" />
            <parameter replace="WID_PARENT" by="negatoSliderView" />
            <parameter replace="sliceIndex" by="${sliceIndex}" />
            <parameter replace="enableSliceType" by="${enableSliceType}" />
            <inout group="data">
                <key name="image" uid="${image}" />
                <key name="transferFunction" uid="${transferFunction}" />
            </inout>
        </service>

        <!-- ******************************* Connections ***************************************** -->

        <!-- Display the picked voxel information -->
        <connect>
            <signal>negatoAdp/picked_voxel</signal>
            <slot>pickedVoxelTextAdp/set_text</slot>
        </connect>

        <!-- distance channels -->
        <connect channel="${RULER_ACTIVATION_CHANNEL}">
            <slot>ruler_fiducial_adp/activate_tool</slot>
        </connect>

        <connect channel="${RULER_DEACTIVATION_CHANNEL}">
            <signal>ruler_fiducial_adp/tool_deactivated</signal>
        </connect>

        <connect channel="${VISIBILITY_RULERS_RECEIVER_CHANNEL}">
            <slot>ruler_fiducial_adp/toggle_visibility</slot>
        </connect>

        <connect channel="${LANDMARKS_EDIT_MODE_RECEIVER_CHANNEL}">
            <slot>landmarksAdp/change_edit_mode</slot>
        </connect>

        <connect channel="${LANDMARKS_GROUP_SELECTED_RECEIVER_CHANNEL}">
            <slot>landmarksAdp/set_current_group</slot>
        </connect>

        <connect channel="${LANDMARKS_EDIT_MODE_CHANGED_SENDER_CHANNEL}">
            <signal>landmarksAdp/edit_mode_changed</signal>
        </connect>

        <connect channel="${TOGGLE_VIEW_VISIBILITY_SENDER_CHANNEL}">
            <signal>minimizeAct/clicked</signal>
            <signal>maximizeAct/clicked</signal>
            <signal>eventAdp/triggered</signal>
        </connect>

        <connect>
            <signal>eventAdp/triggered</signal>
            <slot>maximizeAct/toggle_visibility</slot>
            <slot>minimizeAct/toggle_visibility</slot>
        </connect>

        <connect>
            <signal>maximizeAct/clicked</signal>
            <slot>maximizeAct/hide</slot>
            <slot>minimizeAct/show</slot>
        </connect>

        <connect>
            <signal>minimizeAct/clicked</signal>
            <slot>minimizeAct/hide</slot>
            <slot>maximizeAct/show</slot>
        </connect>
    </config>
</extension>
