<plugin id="ex_stereo_ar">
    <requirement id="sight::module::ui::qt" />
    <requirement id="sight::module::service" />
    <requirement id="sight::module::viz::scene3d" />
    <requirement id="sight::module::viz::scene3d_qt" />
    <requirement id="sight::module::ui" />

    <extension implements="sight::app::extension::config">
        <id>ex_stereo_ar::config</id>
        <config>
            <!-- ******************************* Objects declaration ****************************** -->

            <object uid="camera_set" type="sight::data::camera_set" />
            <object uid="camera1" type="sight::data::camera" deferred="true" />
            <object uid="camera2" type="sight::data::camera" deferred="true" />
            <object uid="frameTL1" type="sight::data::frame_tl" />
            <object uid="frameTL2" type="sight::data::frame_tl" />
            <object uid="marker_map1" type="sight::data::marker_map" />
            <object uid="marker_map2" type="sight::data::marker_map" />
            <object uid="videoImage1" type="sight::data::image" />
            <object uid="videoImage2" type="sight::data::image" />
            <object uid="matrixTL" type="sight::data::matrix_tl" />
            <object uid="matrix" type="sight::data::matrix4" />
            <object uid="extrinsic" type="sight::data::matrix4" deferred="true" />
            <object uid="inverseMat" type="sight::data::matrix4" />
            <object uid="rightMat" type="sight::data::matrix4" />

            <!-- Aruco tracker parameters -->
            <object uid="aruco_params" type="sight::data::map">
                <item key="debug_mode" type="sight::data::boolean" value="true" />
                <item key="corner_refinement" type="sight::data::boolean" value="true" />
                <item key="adaptive_th_win_size_min" type="sight::data::integer" value="3" />
                <item key="adaptive_th_win_size_max" type="sight::data::integer" value="23" />
                <item key="adaptive_th_win_size_step" type="sight::data::integer" value="10" />
                <item key="adaptive_th_constant" type="sight::data::real" value="7." />
                <item key="min_marker_perimeter_rate" type="sight::data::real" value="0.03" />
                <item key="max_marker_perimeter_rate" type="sight::data::real" value="4.0" />
                <item key="polygonal_approx_accuracy_rate" type="sight::data::real" value="0.03" />
                <item key="min_corner_distance_rate" type="sight::data::real" value="0.01" />
                <item key="minDistanceToBorder" type="sight::data::integer" value="1" />
                <item key="minMarkerDistanceRate" type="sight::data::real" value="0.0" />
                <item key="cornerRefinementWinSize" type="sight::data::integer" value="5" />
                <item key="cornerRefinementMaxIterations" type="sight::data::integer" value="30" />
                <item key="cornerRefinementMinAccuracy" type="sight::data::real" value="0.1" />
                <item key="markerBorderBits" type="sight::data::integer" value="1" />
                <item key="perspective_remove_pixel_per_cell" type="sight::data::integer" value="8" />
                <item key="perspectiveRemoveIgnoredMarginPerCell" type="sight::data::real" value="0.1" />
                <item key="maxErroneousBitsInBorderRate" type="sight::data::real" value="0.3" />
                <item key="minOtsuStdDev" type="sight::data::real" value="5.0" />
                <item key="errorCorrectionRate" type="sight::data::real" value="0.6" />
            </object>

            <!-- Reprojection parameters -->
            <object uid="reprojection_params" type="sight::data::map">
                <item key="display" type="sight::data::boolean" value="true" />
                <item key="color" type="sight::data::color" value="#ffffff" />
            </object>

            <!-- ******************************* UI declaration *********************************** -->

            <service uid="mainFrame" type="sight::module::ui::frame">
                <gui>
                    <frame>
                        <name>ex_stereo_ar</name>
                        <icon>ex_stereo_ar/app.ico</icon>
                    </frame>
                    <menubar />
                    <toolbar />
                </gui>
                <registry>
                    <menubar sid="menuBarView" />
                    <toolbar sid="toolbarView" />
                    <view sid="cameraView" />
                </registry>
            </service>

            <service uid="menuBarView" type="sight::module::ui::menubar">
                <gui>
                    <layout>
                        <menu name="File" />
                        <menu name="Preferences" />
                    </layout>
                </gui>
                <registry>
                    <menu sid="menuFileView" />
                    <menu sid="menuPreferencesView" />
                </registry>
            </service>

            <service uid="menuFileView" type="sight::module::ui::menu">
                <gui>
                    <layout>
                        <menuItem name="Show settings" shortcut="Ctrl+H" style="check" />
                        <menuItem name="Quit" special_action="QUIT" shortcut="Ctrl+Q" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="showParametersAct" />
                    <menuItem sid="quitAct" />
                </registry>
            </service>

            <service uid="menuPreferencesView" type="sight::module::ui::menu">
                <gui>
                    <layout>
                        <menuItem name="Video directory" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="videoDirAct" />
                </registry>
            </service>

            <service uid="toolbarView" type="sight::module::ui::toolbar">
                <gui>
                    <layout>
                        <menuItem name="Load Calibration" icon="sight::module::ui::icons/calibration.svg" />
                        <editor />
                        <editor />
                        <menuItem name="Start" icon="sight::module::ui::icons/play.svg" shortcut="Space" />
                        <menuItem name="Stop" icon="sight::module::ui::icons/stop.svg" />
                        <menuItem name="Loop" icon="sight::module::ui::icons/loop.svg" style="check" />
                        <separator />
                        <menuItem name="Start camera pose recording" icon="sight::module::ui::icons/record.svg" />
                        <menuItem name="Stop camera pose recording" icon="sight::module::ui::icons/stop.svg" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="loadCalibAct" />
                    <editor sid="videoSelector1Srv" />
                    <editor sid="videoSelector2Srv" />
                    <menuItem sid="startVideoAct" />
                    <menuItem sid="stopVideoAct" />
                    <menuItem sid="pauseVideoAct" />
                    <menuItem sid="startRecordAct" />
                    <menuItem sid="stopRecordAct" />
                </registry>
            </service>

            <service uid="cameraView" type="sight::module::ui::view">
                <gui>
                    <layout type="sight::ui::layout::line">
                        <orientation value="horizontal" />
                        <view proportion="1" />
                        <view proportion="0" background_color="#36393E" />
                    </layout>
                </gui>
                <registry>
                    <view sid="videoView" />
                    <view sid="parametersView" />
                </registry>
            </service>

            <service uid="videoView" type="sight::module::ui::view">
                <gui>
                    <layout type="sight::ui::layout::line">
                        <orientation value="vertical" />
                        <view proportion="3" />
                        <view proportion="0" background_color="#36393E" />
                    </layout>
                </gui>
                <registry>
                    <view sid="stereoView" />
                    <view sid="infoView" />
                </registry>
            </service>

            <service uid="infoView" type="sight::module::ui::view">
                <gui>
                    <layout type="sight::ui::layout::line">
                        <orientation value="vertical" />
                        <view proportion="1" />
                        <view proportion="1" />
                    </layout>
                </gui>
                <registry>
                    <view sid="reprojectionInfoView" />
                    <view sid="reprojectionMatrixStatusSrv" />
                </registry>
            </service>

            <service uid="stereoView" type="sight::module::ui::view">
                <gui>
                    <layout type="sight::ui::layout::line">
                        <orientation value="horizontal" />
                        <view proportion="0" />
                        <view proportion="0" />
                    </layout>
                </gui>
                <registry>
                    <view sid="leftGenericSceneSrv" />
                    <view sid="rightGenericSceneSrv" />
                </registry>
            </service>

            <service uid="reprojectionInfoView" type="sight::module::ui::view">
                <gui>
                    <layout type="sight::ui::layout::line">
                        <orientation value="horizontal" />
                        <view proportion="1" />
                        <view proportion="1" />
                    </layout>
                </gui>
                <registry>
                    <view sid="errorLabelLeftSrv" />
                    <view sid="errorLabelRightSrv" />
                </registry>
            </service>

            <service uid="parametersView" type="sight::module::ui::view">
                <gui>
                    <layout type="sight::ui::layout::line">
                        <orientation value="vertical" />
                        <view proportion="3" />
                        <view proportion="2" />
                        <view proportion="1" />
                        <spacer />
                    </layout>
                </gui>
                <registry>
                    <view sid="aruco_parameters_srv" />
                    <view sid="reprojection_parameters_srv" />
                    <view sid="synchroParamsSrv" />
                </registry>
            </service>

            <!-- ************************************* Action ************************************ -->

            <!-- declaration of actions/slot callers -->
            <service uid="quitAct" type="sight::module::ui::quit" />

            <!-- preference save the video directory and re-open the same directory at next launch of the app -->
            <service uid="videoDirAct" type="sight::module::ui::qt::preferences_configuration">
                <preference>
                    <type>path</type>
                    <name>Video directory</name>
                    <key>VIDEO_DIR_PREF</key>
                    <default_value>...</default_value>
                </preference>
            </service>

            <service uid="showParametersAct" type="sight::module::ui::modify_layout">
                <config>
                    <show_or_hide sid="parametersView" />
                </config>
            </service>

            <service uid="loadCalibAct" type="sight::module::ui::action" />
            <service uid="startVideoAct" type="sight::module::ui::action" />
            <service uid="stopVideoAct" type="sight::module::ui::action" />
            <service uid="pauseVideoAct" type="sight::module::ui::action" />
            <service uid="startRecordAct" type="sight::module::ui::action" />
            <service uid="stopRecordAct" type="sight::module::ui::action">
                <state visible="false" />
            </service>

            <!-- ******************************* Begin Generic scene ******************************* -->

            <service uid="leftGenericSceneSrv" type="sight::viz::scene3d::render">
                <scene renderMode="manual">
                    <background topColor="#36393E" bottomColor="#36393E" />

                    <layer id="video">
                        <adaptor uid="LVideoAdp" />
                    </layer>
                    <layer id="default">
                        <adaptor uid="LAxisAdp" />
                        <adaptor uid="LCameraAdp" />
                    </layer>
                </scene>
            </service>

            <service uid="LVideoAdp" type="sight::module::viz::scene3d::adaptor::video" auto_connect="true">
                <in key="image" uid="videoImage1" />
            </service>

            <service uid="LAxisAdp" type="sight::module::viz::scene3d::adaptor::axis">
                <config length="30" origin="true" />
            </service>

            <service uid="LCameraAdp" type="sight::module::viz::scene3d::adaptor::camera" auto_connect="true">
                <inout key="transform" uid="inverseMat" />
                <in key="calibration" uid="camera1" />
            </service>

            <!-- ******************************* Begin Generic scene ******************************* -->

            <!-- scene in which the video and the 3D will be rendered -->
            <service uid="rightGenericSceneSrv" type="sight::viz::scene3d::render">
                <scene renderMode="manual">
                    <background topColor="#36393E" bottomColor="#36393E" />

                    <layer id="video">
                        <adaptor uid="RVideoAdp" />
                    </layer>
                    <layer id="default">
                        <adaptor uid="RAxisAdp" />
                        <adaptor uid="RCameraAdp" />
                    </layer>
                </scene>
            </service>

            <service uid="RVideoAdp" type="sight::module::viz::scene3d::adaptor::video" auto_connect="true">
                <in key="image" uid="videoImage2" />
            </service>

            <service uid="RAxisAdp" type="sight::module::viz::scene3d::adaptor::axis">
                <config length="30" origin="true" />
            </service>

            <service uid="RCameraAdp" type="sight::module::viz::scene3d::adaptor::camera" auto_connect="true">
                <inout key="transform" uid="rightMat" />
                <in key="calibration" uid="camera2" />
            </service>

            <!-- ******************************* Services ***************************************** -->

            <!-- Calibration reader (here OpenCV's XML/YAML) -->
            <service uid="calibrationReaderSrv" type="sight::module::io::vision::open_cv_reader">
                <inout key="data" uid="camera_set" />
            </service>

            <!-- extract a sight::data::camera from the sight::data::camera_set -->
            <service uid="cameraExtractorSrv" type="sight::module::data::get_camera">
                <inout key="camera_set" uid="camera_set" />
                <out group="camera">
                    <key index="0" uid="camera1" />
                    <key index="1" uid="camera2" />
                </out>
                <out group="extrinsic">
                    <key index="1" uid="extrinsic" />
                </out>
            </service>

            <!-- save poses matrices in a file -->
            <service uid="matricesWriterSrv" type="sight::module::io::matrix::matrix_writer">
                <in key="data" uid="matrixTL" auto_connect="false" />
            </service>

            <!-- GUI to handle aruco tracking parameters -->
            <service uid="aruco_parameters_srv" type="sight::module::ui::qt::settings">
                <inout key="map" uid="${aruco_params}" />
                <ui>
                    <item name="Show Marker" key="debug_mode" />
                    <item name="Corner refinement" key="corner_refinement" />
                    <item name="adpt. Threshold win size min" key="adaptive_th_win_size_min" widget="slider" min="3" max="100" />
                    <item name="adpt. Threshold win size max" key="adaptive_th_win_size_max" widget="slider" min="4" max="100" />
                    <item name="adpt. Threshold win size step" key="adaptive_th_win_size_step" widget="slider" min="1" max="100" />
                    <item name="adpt. threshold constant" key="adaptive_th_constant" min="0." max="30." />
                    <item name="Min. Marker Perimeter Rate" key="min_marker_perimeter_rate" min="0.01" max="1.0" />
                    <item name="Max. Marker Perimeter Rate" key="max_marker_perimeter_rate" min="1." max="10." />
                    <item name="Polygonal Approx. Accuracy Rate" key="polygonal_approx_accuracy_rate" min="0.01" max="1." />
                    <item name="Min. Corner Distance Rate" key="min_corner_distance_rate" min="0." max="1." />
                    <item name="Min. Distance to Border" key="min_distance_to_border" widget="slider" min="0" max="10" />
                    <item name="Min. Marker Distance Rate" key="min_marker_distance_rate" min="0." max="1." />
                    <item name="Corner Refinement Win. Size" key="corner_refinement_win_size" widget="slider" min="1" max="100" />
                    <item name="Corner Refinement Max Iterations" key="corner_refinement_max_iterations" widget="slider" min="1" max="10" />
                    <item name="Corner Refinement Min. Accuracy" key="corner_refinement_min_accuracy" min="0.01" max="10." />
                    <item name="Marker Border Bits" key="marker_border_bits" widget="slider" min="1" max="100" />
                    <item name="Perspective Remove Pixel per Cell" key="perspective_remove_pixel_per_cell" widget="slider" min="1" max="32" />
                    <item name="Perspective Remove Ignored Margin Per Cell" key="perspective_remove_ignored_margin_per_cell" min="0." max="1." />
                    <item name="Max. Erroneous Bits In Border Rate" key="max_erroneous_bits_in_border_rate" min="0." max="1." />
                    <item name="Min. Otsu Std. Dev." key="min_otsu_std_dev" min="0." max="100." />
                    <item name="Error Correction Rate" key="error_correction_rate" min="0." max="1." />
                </ui>
            </service>

            <service uid="reprojection_parameters_srv" type="sight::module::ui::qt::settings">
                <inout key="map" uid="${reprojection_params}" />
                <ui>
                    <item name="Show reprojection" key="display" />
                    <item name="Circle color" key="color" />
                </ui>
            </service>

            <service uid="synchroParamsSrv" type="sight::module::ui::qt::parameters">
                <parameters>
                    <param type="int" name="frameTL1 Timeshift (ms)" key="frameDelay_0" widget="spin" defaultValue="0" min="0" max="2000" />
                    <param type="int" name="frameTL2 Timeshift (ms)" key="frameDelay_1" widget="spin" defaultValue="0" min="0" max="2000" />
                    <param type="int" name="matrix Timeshift (ms)" key="matrixDelay_0" widget="spin" defaultValue="0" min="0" max="2000" />
                </parameters>
            </service>

            <!-- Gui Service to display a value in a QLabel -->
            <service uid="errorLabelLeftSrv" type="sight::module::ui::qt::text_status">
                <label>Reprojection Error Left (RMSE)</label>
                <color>#D25252</color>
            </service>

            <service uid="errorLabelRightSrv" type="sight::module::ui::qt::text_status">
                <label>Reprojection Error Right (RMSE)</label>
                <color>#D25252</color>
            </service>

            <!-- GUI to display a state -->
            <service uid="reprojectionMatrixStatusSrv" type="sight::module::ui::qt::status">
                <labels display="beside">
                    <name>Reprojection matrix computed</name>
                </labels>
                <red>No reprojection matrix</red>
                <green>Reprojection matrix is present</green>
            </service>

            <!-- GUI to select camera (device, file, or stream) -->
            <service uid="videoSelector1Srv" type="sight::module::ui::qt::video::camera">
                <inout key="camera" uid="camera1" />
                <videoSupport>true</videoSupport>
            </service>

            <service uid="videoSelector2Srv" type="sight::module::ui::qt::video::camera">
                <inout key="camera" uid="camera2" />
                <videoSupport>true</videoSupport>
            </service>

            <!-- Grab image from camera device and fill a frame timeline -->
            <service uid="videoGrabber1Srv" type="sight::module::io::video::frame_grabber">
                <in key="camera" uid="camera1" />
                <inout key="frame_tl" uid="frameTL1" />
            </service>

            <service uid="videoGrabber2Srv" type="sight::module::io::video::frame_grabber">
                <in key="camera" uid="camera2" />
                <inout key="frame_tl" uid="frameTL2" />
            </service>

            <!-- Aruco tracker service -->
            <service uid="arucoTracker1Srv" type="sight::module::navigation::optics::aruco_tracker" worker="tracking1">
                <in key="camera" uid="camera1" />
                <inout key="frame" uid="videoImage1" auto_connect="false" />
                <inout group="marker_map">
                    <!-- timeline of detected tag(s) -->
                    <key uid="marker_map1" />
                </inout>
                <track>
                    <!-- list of id -->
                    <marker id="101" />
                </track>
                <properties from="${aruco_params}" />
            </service>

            <service uid="arucoTracker2Srv" type="sight::module::navigation::optics::aruco_tracker" worker="tracking2">
                <in key="camera" uid="camera2" />
                <inout key="frame" uid="videoImage2" auto_connect="false" />
                <inout group="marker_map">
                    <!-- timeline of detected tag(s) -->
                    <key uid="marker_map2" />
                </inout>
                <track>
                    <!-- list of id -->
                    <marker id="101" />
                </track>
                <properties from="${aruco_params}" />
            </service>

            <!-- This will compute the pose of the camera with tag(s) detected by aruco -->
            <service uid="registrationSrv" type="sight::module::geometry::vision::pose_from2d" worker="registration" auto_connect="false">
                <in group="marker_map">
                    <key uid="marker_map1" />
                    <key uid="marker_map2" />
                </in>
                <in group="camera">
                    <key uid="camera1" />
                    <key uid="camera2" />
                </in>
                <in key="extrinsic" uid="extrinsic" />
                <inout group="matrix">
                    <key uid="matrix" id="101" />
                </inout>
                <pattern_width>60</pattern_width>
            </service>

            <!-- This will compute the reprojection error Left -->
            <service uid="leftReprojectionErrorSrv" type="sight::module::geometry::vision::reprojection_error" worker="error1">
                <in group="matrix" auto_connect="false">
                    <key uid="matrix" id="101" />
                </in>
                <in key="camera" uid="camera1" />
                <in key="marker_map" uid="marker_map1" />
                <inout key="frame" uid="videoImage1" />
                <properties from="${reprojection_params}" pattern_width="60" />
            </service>

            <service uid="rightReprojectionErrorSrv" type="sight::module::geometry::vision::reprojection_error" worker="error2">
                <in group="matrix" auto_connect="false">
                    <key uid="matrix" id="101" />
                </in>
                <in key="extrinsic" uid="extrinsic" />
                <in key="camera" uid="camera2" />
                <in key="marker_map" uid="marker_map2" />
                <inout key="frame" uid="videoImage2" />
                <properties from="${reprojection_params}" pattern_width="60" />
            </service>

            <!-- To synchronize matrix, frame and detection -->
            <service uid="frameMatrixSynchronizerSrv" type="sight::module::sync::synchronizer" worker="videoWorker">
                <in group="frame_tl" auto_connect="false">
                    <key uid="frameTL1" />
                    <key uid="frameTL2" />
                </in>
                <inout group="frames">
                    <key uid="videoImage1" />
                    <key uid="videoImage2" />
                </inout>
                <tolerance>100</tolerance>
            </service>

            <!-- to multiply matrices (here only used to inverse "matrix" )-->
            <service uid="matrixReverserSrv" type="sight::module::geometry::concatenate_matrices">
                <in group="matrix">
                    <key uid="matrix" auto_connect="false" inverse="true" />
                </in>
                <inout key="output" uid="inverseMat" />
            </service>

            <!-- to multiply matrices -->
            <service uid="concatenateSrv" type="sight::module::geometry::concatenate_matrices">
                <in group="matrix" auto_connect="false">
                    <key uid="inverseMat" inverse="false" />
                    <key uid="extrinsic" inverse="true" />
                </in>
                <inout key="output" uid="rightMat" />
            </service>

            <service uid="hideAxisSrv" type="sight::module::ui::action" />

            <!-- ******************************* Connections ***************************************** -->

            <connect>
                <signal>loadCalibAct/clicked</signal>
                <slot>calibrationReaderSrv/update</slot>
            </connect>

            <connect>
                <signal>startVideoAct/clicked</signal>
                <slot>videoGrabber1Srv/start_camera</slot>
                <slot>videoGrabber2Srv/start_camera</slot>
                <slot>updater/start</slot>
            </connect>

            <connect>
                <signal>stopVideoAct/clicked</signal>
                <slot>videoGrabber1Srv/stop_camera</slot>
                <slot>videoGrabber2Srv/stop_camera</slot>
                <slot>updater/stop</slot>
            </connect>

            <connect>
                <signal>pauseVideoAct/clicked</signal>
                <slot>videoGrabber1Srv/pause_camera</slot>
                <slot>videoGrabber2Srv/pause_camera</slot>
                <slot>updater/start</slot>
            </connect>

            <connect>
                <signal>startRecordAct/clicked</signal>
                <slot>matricesWriterSrv/start_record</slot>
                <slot>startRecordAct/hide</slot>
                <slot>stopRecordAct/show</slot>
            </connect>

            <connect>
                <signal>stopRecordAct/clicked</signal>
                <slot>matricesWriterSrv/stop_record</slot>
                <slot>stopRecordAct/hide</slot>
                <slot>startRecordAct/show</slot>
            </connect>

            <connect>
                <signal>leftReprojectionErrorSrv/error_computed</signal>
                <slot>errorLabelLeftSrv/set_double_parameter</slot>
            </connect>

            <connect>
                <signal>rightReprojectionErrorSrv/error_computed</signal>
                <slot>errorLabelRightSrv/set_double_parameter</slot>
            </connect>

            <connect>
                <signal>frameMatrixSynchronizerSrv/matrix_synchronized</signal>
                <slot>reprojectionMatrixStatusSrv/change_to_green</slot>
            </connect>

            <connect>
                <signal>frameMatrixSynchronizerSrv/matrix_unsynchronized</signal>
                <slot>reprojectionMatrixStatusSrv/change_to_red</slot>
            </connect>

            <connect>
                <signal>camera_set/added_camera</signal>
                <slot>cameraExtractorSrv/update</slot>
            </connect>

            <connect>
                <signal>camera1/id_modified</signal>
                <slot>videoGrabber1Srv/stop_camera</slot>
                <slot>videoGrabber2Srv/stop_camera</slot>
                <slot>updater/stop</slot>
            </connect>

            <connect>
                <signal>camera2/id_modified</signal>
                <slot>videoGrabber1Srv/stop_camera</slot>
                <slot>videoGrabber2Srv/stop_camera</slot>
                <slot>updater/stop</slot>
            </connect>

            <connect>
                <signal>arucoTracker1Srv/marker_detected</signal>
                <slot>LAxisAdp/update_visibility</slot>
            </connect>

            <connect>
                <signal>arucoTracker2Srv/marker_detected</signal>
                <slot>RAxisAdp/update_visibility</slot>
            </connect>

            <connect>
                <signal>synchroParamsSrv/int_changed</signal>
                <slot>frameMatrixSynchronizerSrv/set_delay</slot>
            </connect>

            <connect>
                <signal>hideAxisSrv/is_checked</signal>
                <slot>LAxisAdp/update_visibility</slot>
                <slot>RAxisAdp/update_visibility</slot>
            </connect>

            <!-- ******************************* Update services ***************************************** -->

            <update>
                <service uid="showParametersAct" />
                <service uid="hideAxisSrv" />

                <sequence uid="updater" loop="true" start="false">
                    <service uid="frameMatrixSynchronizerSrv" />
                    <service uid="matricesWriterSrv" />
                    <service uid="arucoTracker1Srv" />
                    <service uid="arucoTracker2Srv" />
                    <service uid="registrationSrv" />
                    <service uid="leftReprojectionErrorSrv" />
                    <service uid="rightReprojectionErrorSrv" />
                    <service uid="matrixReverserSrv" />
                    <service uid="concatenateSrv" />
                    <service uid="leftGenericSceneSrv" />
                    <service uid="rightGenericSceneSrv" />
                </sequence>
            </update>
        </config>
    </extension>
</plugin>
