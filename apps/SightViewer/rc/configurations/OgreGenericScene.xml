<extension implements="sight::service::extension::AppConfig">
    <id>SightViewer_GenericScene_AppCfg</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="NEGATO_VIEW_RECEIVE_CHANNEL" />
        <param name="VOLUME_VIEW_RECEIVE_CHANNEL" />
        <param name="VR_BASIC_BOOL_PARAM_RECEIVER_CHANNEL" />
        <param name="VR_BASIC_INT_PARAM_RECEIVER_CHANNEL" />
        <param name="VR_BASIC_DOUBLE_PARAM_RECEIVER_CHANNEL" />
        <param name="VR_VISIBILITY_RECEIVER_CHANNEL" />
        <param name="3DNEGATO_VISIBILITY_RECEIVER_CHANNEL" />
        <param name="MESHES_VISIBILITY_RECEIVER_CHANNEL" />
        <param name="BOX_WIDGET_VISIBILITY_RECEIVER_CHANNEL" />
        <param name="BOX_WIDGET_RESET_RECEIVER_CHANNEL" />
        <param name="SHAPE_EXTRUDER_ENABLE_TOOL_RECEIVER_CHANNEL" />
        <param name="SHAPE_EXTRUDER_TOOL_DISABLED_SENDER_CHANNEL" />
        <param name="SHAPE_EXTRUDER_CANCEL_LAST_CLICK_RECEIVER_CHANNEL" />
        <param name="SHAPE_EXTRUDER_REVERT_RECEIVER_CHANNEL" />
        <param name="AXIS_VISIBILITY_RECEIVER_CHANNEL" />
        <param name="PICKER_SENDER_CHANNEL" />
        <param name="WORLD_COORDS_LANDMARKS_CHANNEL" />
        <param name="NEGATO3D_TRANSPARENCY_CHANNEL" />
        <param name="modelSeries" />
        <param name="image" />
        <param name="volumeTF" />
        <param name="extrudedModelSeries" />
        <param name="landmarks" />
    </parameters>
    <config>

        <!-- ******************************* Objects declaration ****************************** -->

        <object uid="${modelSeries}" type="sight::data::ModelSeries" src="deferred" />
        <object uid="${image}" type="sight::data::Image" src="deferred" />
        <object uid="${volumeTF}" type="sight::data::TransferFunction" src="ref" />
        <object uid="${extrudedModelSeries}" type="sight::data::ModelSeries" src="ref" />
        <object uid="${landmarks}" type="sight::data::Landmarks" src="ref" />

        <object uid="extrudedImage" type="sight::data::Image" />
        <object uid="clippingMatrix" type="sight::data::Matrix4" />
        <object uid="identityMatrix" type="sight::data::Matrix4" />
        <object uid="background" type="sight::data::Image" />
        <object uid="snapshot" type="sight::data::Image" />
        <!-- Camera matrix -->
        <object uid="globalCamera" type="sight::data::Matrix4" />

        <!-- ******************************* UI declaration *********************************** -->

        <service uid="mainView" type="sight::module::ui::base::SView">
            <gui>
                <slideView opacity="1" hAlign="left" vAlign="top" height="55" width="100">
                    <styleSheet>
                        <![CDATA[
                        #SlideBar QWidget {
                            background-color: none;
                        }
                        ]]>
                    </styleSheet>
                </slideView>
                <layout type="sight::ui::base::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <slideView sid="topToolbarSliderView" start="true" />
                <view sid="topScenesView" start="true" />
                <view sid="bottomScenesView" start="true" />
            </registry>
        </service>

        <service uid="topToolbarSliderView" type="sight::module::ui::base::SView">
            <gui>
                <toolBar backgroundColor="#00000000" />
                <layout type="sight::ui::base::LineLayoutManager">
                    <orientation value="vertical" />
                </layout>
            </gui>
            <registry>
                <toolBar sid="topToolbarView" start="true" />
            </registry>
        </service>

        <service uid="topToolbarView" type="sight::module::ui::base::SToolBar">
            <gui>
                <layout>
                    <menuItem name="Fullscreen" icon="sight::module::ui::flaticons/YellowFullscreen.svg" />
                    <menuItem name="Windowed" icon="sight::module::ui::flaticons/YellowMinimize.svg" shortcut="Escape" />
                    <menuItem name="Snapshot" icon="sight::module::ui::flaticons/YellowPhoto.svg" shortcut="CTRL+S" />
                    <spacer />
                </layout>
            </gui>
            <registry>
                <menuItem sid="fullscreenAct" start="true" />
                <menuItem sid="windowedAct" start="true" />
                <menuItem sid="snapshotAct" start="true" />
            </registry>
        </service>

        <service uid="notifierSrv" type="sight::module::ui::qt::SNotifier">
            <parent uid="mainview" />
            <message>Default message</message>
            <maxNotifications>3</maxNotifications>
            <position>BOTTOM_LEFT</position>
            <duration>3000</duration>
        </service>

        <!-- ******************************* Begin Generic Scene ******************************* -->

        <service uid="topScenesView" type="sight::module::ui::base::SView">
            <gui>
              <layout type="sight::ui::base::LineLayoutManager" >
                    <orientation value="horizontal" />
                    <view proportion="0" minWidth="0" />
                    <view proportion="0" minWidth="0" visible="false" />
               </layout>
           </gui>
           <registry>
               <view sid="mainSceneSrv" start="true" />
               <view sid="axialSceneView" start="true"/>

           </registry>
        </service>

        <service uid="bottomScenesView" type="sight::module::ui::base::SView">
            <gui>
              <layout type="sight::ui::base::LineLayoutManager" >
                    <orientation value="horizontal" />
                    <view proportion="0" minWidth="0" visible="false" />
                    <view proportion="0" minWidth="0" visible="false" />
               </layout>
           </gui>
           <registry>
               <view sid="sagittalSceneView" start="true" />
               <view sid="frontalSceneView" start="true" />
           </registry>
        </service>

        <service uid="mainSceneSrv" type="sight::viz::scene3d::SRender">
            <scene>
                <background topColor="#36393E" bottomColor="#36393E" />

                <layer id="defaultLayer" order="1">
                    <adaptor uid="globalCameraAdp" />
                    <adaptor uid="trackballInteractorAdp" />
                    <adaptor uid="pickerInteractorAdp" />
                    <adaptor uid="modeSeriesAdp" />
                    <adaptor uid="extrudedMeshesAdp" />
                    <adaptor uid="3DNegatoAdp" />
                    <adaptor uid="volumeAdp" />
                    <adaptor uid="landmarksAdp" />
                    <adaptor uid="multiDistancesAdp" />
                    <adaptor uid="axisAdp" />
                    <adaptor uid="pickedVoxelTextAdp" />
                    <adaptor uid="shapeExtruderAdp" />
                    <adaptor uid="snapshotAdp" />
                </layer>

                <layer id="orientationMarkerLayer" order="2">
                    <viewport hOffset="0" vOffset="0" width="0.2" height="0.2" hAlign="right" vAlign="bottom" />
                    <adaptor uid="orientationMarkerAdp" />
                </layer>
            </scene>
        </service>

        <service uid="axialSceneView" type="sight::module::ui::base::SView">
            <gui>
                <layout type="sight::ui::base::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" minWidth="0" />
                    <view proportion="0" minWidth="0" />
                </layout>
            </gui>
            <registry>
                <view sid="axialSceneSrv" start="true"/>
                <view sid="axialNegatoSlicerSrv" start="false" />
            </registry>
        </service>

        <service uid="axialSceneSrv" type="sight::viz::scene3d::SRender">
            <scene>
                <background topColor="#36393E" bottomColor="#36393E" />

                <layer id="axialNegatoLayer" order="1">
                    <adaptor uid="axialNegatoAdp" />
                    <adaptor uid="axialNegatoMultiDistancesAdp" />
                    <adaptor uid="axialNegatoCameraAdp" />
                    <adaptor uid="axialPickerInteractorAdp" />
                    <adaptor uid="axialLandmarksAdp" />
                    <adaptor uid="axialPickedVoxelTextAdp" />
                </layer>
            </scene>
        </service>

        <service uid="sagittalSceneView" type="sight::module::ui::base::SView">
            <gui>
                <layout type="sight::ui::base::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" minWidth="0" />
                    <view proportion="0" minWidth="0" />
                </layout>
            </gui>
            <registry>
                <view sid="sagittalSceneSrv" start="true"/>
                <view sid="sagittalNegatoSlicerSrv" start="false" />
            </registry>
        </service>

        <service uid="sagittalSceneSrv" type="sight::viz::scene3d::SRender">
            <scene>
                <background topColor="#36393E" bottomColor="#36393E" />

                <layer id="sagittalNegatoLayer" order="1">
                    <adaptor uid="sagittalNegatoAdp" />
                    <adaptor uid="sagittalNegatoMultiDistancesAdp" />
                    <adaptor uid="sagittalNegatoCameraAdp" />
                    <adaptor uid="sagittalPickerInteractorAdp" />
                    <adaptor uid="sagittalLandmarksAdp" />
                    <adaptor uid="sagittalPickedVoxelTextAdp" />
                </layer>
            </scene>
        </service>

        <service uid="frontalSceneView" type="sight::module::ui::base::SView">
            <gui>
                <layout type="sight::ui::base::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" minWidth="0" />
                    <view proportion="0" minWidth="0" />
                </layout>
            </gui>
            <registry>
                <view sid="frontalSceneSrv" start="true"/>
                <view sid="frontalNegatoSlicerSrv" start="false" />
            </registry>
        </service>

        <service uid="frontalSceneSrv" type="sight::viz::scene3d::SRender">
            <scene>
                <background topColor="#36393E" bottomColor="#36393E" />

                <layer id="frontalNegatoLayer" order="1">
                    <adaptor uid="frontalNegatoAdp" />
                    <adaptor uid="frontalNegatoMultiDistancesAdp" />
                    <adaptor uid="frontalNegatoCameraAdp" />
                    <adaptor uid="frontalPickerInteractorAdp" />
                    <adaptor uid="frontalLandmarksAdp" />
                    <adaptor uid="frontalPickedVoxelTextAdp" />
                </layer>
            </scene>
        </service>

        <!-- Camera for the 3D layer -->
        <service uid="globalCameraAdp" type="sight::module::viz::scene3d::adaptor::SCamera">
            <inout key="transform" uid="globalCamera" />
        </service>

        <service uid="trackballInteractorAdp" type="sight::module::viz::scene3d::adaptor::STrackballCamera">
            <config priority="0" />
        </service>

        <service uid="pickerInteractorAdp" type="sight::module::viz::scene3d::adaptor::SPicker">
            <config queryMask="0x40000000" priority="1" />
        </service>

        <service uid="modeSeriesAdp" type="sight::module::viz::scene3d::adaptor::SModelSeries" autoConnect="true">
            <in key="model" uid="${modelSeries}" />
            <config queryFlags="0x40000000" autoresetcamera="true" />
        </service>

        <service uid="extrudedMeshesAdp" type="sight::module::viz::scene3d::adaptor::SModelSeries" autoConnect="true">
            <in key="model" uid="${extrudedModelSeries}" />
            <config queryFlags="0x40000000" autoresetcamera="false" />
        </service>

        <service uid="volumeAdp" type="sight::module::viz::scene3d::adaptor::SVolumeRender">
            <in key="image" uid="extrudedImage" />
            <in key="tf" uid="${volumeTF}" />
            <inout key="clippingMatrix" uid="clippingMatrix" />
            <config widgets="false" preintegration="false" autoresetcamera="false" samples="1024" />
        </service>

        <service uid="3DNegatoAdp" type="sight::module::viz::scene3d::adaptor::SNegato3D">
            <in key="image" uid="${image}" />
            <inout key="tf" uid="${volumeTF}" />
            <config queryFlags="0x40000000" interactive="true" priority="2" />
        </service>

        <service uid="landmarksAdp" type="sight::module::viz::scene3d::adaptor::SLandmarks" autoConnect="true">
            <inout key="landmarks" uid="${landmarks}" />
            <config priority="4" />
        </service>

        <service uid="multiDistancesAdp" type="sight::module::viz::scene3d::adaptor::SImageMultiDistances" autoConnect="true">
            <in key="image" uid="${image}" />
            <config fontSize="32" radius="4.5" queryFlags="0x40000000" priority="3" />
        </service>

        <service uid="axisAdp" type="sight::module::viz::scene3d::adaptor::SAxis">
            <config visible="false" origin="true" label="false" />
        </service>

        <service uid="pickedVoxelTextAdp" type="sight::module::viz::scene3d::adaptor::SText">
            <text></text>
            <config x="0.01" y="0.01" hAlign="right" vAlign="top" color="#ffc000" />
        </service>

        <service uid="shapeExtruderAdp" type="sight::module::viz::scene3d::adaptor::SShapeExtruder">
            <inout key="extrudedMeshes" uid="${extrudedModelSeries}" />
            <config lineColor="#FFC66D" edgeColor="#D35151" />
        </service>

        <service uid="snapshotAdp" type="sight::module::viz::scene3d::adaptor::SFragmentsInfo">
            <inout key="image" uid="snapshot" />
        </service>

        <service uid="orientationMarkerAdp" type="sight::module::viz::scene3d::adaptor::SOrientationMarker" autoConnect="true">
            <in key="matrix" uid="globalCamera" />
        </service>

        <!-- Axial -->

        <service uid="axialNegatoAdp" type="sight::module::viz::scene3d::adaptor::SNegato2D">
            <in key="image" uid="${image}" />
            <in key="tf" uid="${volumeTF}" />
            <config sliceIndex="axial" filtering="anisotropic" />
        </service>

        <service uid="axialNegatoMultiDistancesAdp" type="sight::module::viz::scene3d::adaptor::SImageMultiDistances" autoConnect="true">
            <in key="image" uid="${image}" />
            <config fontSize="32" radius="3" queryFlags="0x40000000" />
        </service>

        <service uid="axialNegatoCameraAdp" type="sight::module::viz::scene3d::adaptor::SNegato2DCamera">
            <inout key="image" uid="${image}" />
            <inout key="tf" uid="${volumeTF}" />
            <config priority="0" orientation="axial" />
        </service>

        <service uid="axialPickerInteractorAdp" type="sight::module::viz::scene3d::adaptor::SPicker">
            <config queryMask="0x40000000" />
        </service>

        <service uid="axialLandmarksAdp" type="sight::module::viz::scene3d::adaptor::SLandmarks" autoConnect="true">
            <inout key="landmarks" uid="${landmarks}" />
            <in key="image" uid="${image}" />
            <config label="false" orientation="axial" priority="4" />
        </service>

        <service uid="axialPickedVoxelTextAdp" type="sight::module::viz::scene3d::adaptor::SText">
            <text></text>
            <config x="0.01" y="0.01" hAlign="right" vAlign="top" color="#ffc000" />
        </service>

        <!-- Sagittal -->

        <service uid="sagittalNegatoAdp" type="sight::module::viz::scene3d::adaptor::SNegato2D">
            <in key="image" uid="${image}" />
            <in key="tf" uid="${volumeTF}" />
            <config sliceIndex="sagittal" filtering="anisotropic" />
        </service>

        <service uid="sagittalNegatoMultiDistancesAdp" type="sight::module::viz::scene3d::adaptor::SImageMultiDistances" autoConnect="true">
            <in key="image" uid="${image}" />
            <config fontSize="32" radius="3" queryFlags="0x40000000" />
        </service>

        <service uid="sagittalNegatoCameraAdp" type="sight::module::viz::scene3d::adaptor::SNegato2DCamera">
            <inout key="image" uid="${image}" />
            <inout key="tf" uid="${volumeTF}" />
            <config priority="0" orientation="sagittal" />
        </service>

        <service uid="sagittalPickerInteractorAdp" type="sight::module::viz::scene3d::adaptor::SPicker">
            <config queryMask="0x40000000" />
        </service>

        <service uid="sagittalLandmarksAdp" type="sight::module::viz::scene3d::adaptor::SLandmarks" autoConnect="true">
            <inout key="landmarks" uid="${landmarks}" />
            <in key="image" uid="${image}" />
            <config label="false" orientation="sagittal" priority="4" />
        </service>

        <service uid="sagittalPickedVoxelTextAdp" type="sight::module::viz::scene3d::adaptor::SText">
            <text></text>
            <config x="0.01" y="0.01" hAlign="right" vAlign="top" color="#ffc000" />
        </service>

        <!-- Frontal -->

        <service uid="frontalNegatoAdp" type="sight::module::viz::scene3d::adaptor::SNegato2D">
            <in key="image" uid="${image}" />
            <in key="tf" uid="${volumeTF}" />
            <config sliceIndex="frontal" filtering="anisotropic" />
        </service>

        <service uid="frontalNegatoMultiDistancesAdp" type="sight::module::viz::scene3d::adaptor::SImageMultiDistances" autoConnect="true">
            <in key="image" uid="${image}" />
            <config fontSize="32" radius="3" queryFlags="0x40000000" />
        </service>

        <service uid="frontalNegatoCameraAdp" type="sight::module::viz::scene3d::adaptor::SNegato2DCamera">
            <inout key="image" uid="${image}" />
            <inout key="tf" uid="${volumeTF}" />
            <config priority="0" orientation="frontal" />
        </service>

        <service uid="frontalPickerInteractorAdp" type="sight::module::viz::scene3d::adaptor::SPicker">
            <config queryMask="0x40000000" />
        </service>

        <service uid="frontalLandmarksAdp" type="sight::module::viz::scene3d::adaptor::SLandmarks" autoConnect="true">
            <inout key="landmarks" uid="${landmarks}" />
            <in key="image" uid="${image}" />
            <config label="false" orientation="frontal" priority="4" />
        </service>

        <service uid="frontalPickedVoxelTextAdp" type="sight::module::viz::scene3d::adaptor::SText">
            <text></text>
            <config x="0.01" y="0.01" hAlign="right" vAlign="top" color="#ffc000" />
        </service>


        <!-- ************************************* Services ************************************ -->

        <service uid="axialNegatoSlicerSrv" type="sight::module::ui::qt::image::SliceIndexPositionEditor" autoConnect="true">
            <inout key="image" uid="${image}" />
            <sliceIndex>Axial</sliceIndex>
        </service>

        <service uid="sagittalNegatoSlicerSrv" type="sight::module::ui::qt::image::SliceIndexPositionEditor" autoConnect="true">
            <inout key="image" uid="${image}" />
            <sliceIndex>Sagittal</sliceIndex>
        </service>

        <service uid="frontalNegatoSlicerSrv" type="sight::module::ui::qt::image::SliceIndexPositionEditor" autoConnect="true">
            <inout key="image" uid="${image}" />
            <sliceIndex>Frontal</sliceIndex>
        </service>

        <!-- Reset the clipping box matreix -->
        <service uid="clippingBoxResetSrv" type="sight::module::data::SCopy">
            <in key="source" uid="identityMatrix" />
            <inout key="target" uid="clippingMatrix" />
        </service>

        <!-- Load the background image -->
        <service uid="backgroundReaderSrv" type="sight::module::io::vtk::SImageReader">
            <inout key="data" uid="background" />
            <resource>SightViewer/background.png</resource>
        </service>

        <!-- Write the snapshot image -->
        <service uid="imageWriterSrv" type="sight::module::io::bitmap::SWriter">
            <in key="data" uid="snapshot" />
            <dialog policy="always" />
            <backends enable="all" mode="best"/>
        </service>

        <service uid="imageExtruderSrv" type="sight::module::filter::image::SImageExtruder" autoConnect="true" worker="EXTRUSION_THREAD">
            <in key="meshes" uid="${extrudedModelSeries}" />
            <in key="image" uid="${image}" />
            <inout key="extrudedImage" uid="extrudedImage" />
        </service>

        <!-- ************************************* Action ************************************ -->

        <!-- Set the view in full screen -->
        <service uid="fullscreenAct" type="sight::module::ui::viz::SScreenSelector">
            <config mode="select" />
        </service>

        <!-- Set the view in windowed  -->
        <service uid="windowedAct" type="sight::module::ui::base::SAction">
            <state visible="false" />
        </service>

        <!-- Save the snapshot image -->
        <service uid="snapshotAct" type="sight::module::ui::base::SAction" />

        <!-- ******************************* Connections ***************************************** -->

        <connect channel="${NEGATO_VIEW_RECEIVE_CHANNEL}">
            <slot>axialSceneView/show</slot>
            <slot>sagittalSceneView/show</slot>
            <slot>frontalSceneView/show</slot>
        </connect>

        <connect channel="${VOLUME_VIEW_RECEIVE_CHANNEL}">
            <slot>axialSceneView/hide</slot>
            <slot>sagittalSceneView/hide</slot>
            <slot>frontalSceneView/hide</slot>
        </connect>

        <!-- Volume rendering parameters -->
        <connect channel="${VR_BASIC_BOOL_PARAM_RECEIVER_CHANNEL}">
            <slot>volumeAdp/setBoolParameter</slot>
        </connect>

        <connect channel="${VR_BASIC_INT_PARAM_RECEIVER_CHANNEL}">
            <slot>volumeAdp/setIntParameter</slot>
        </connect>

        <connect channel="${VR_BASIC_DOUBLE_PARAM_RECEIVER_CHANNEL}">
            <slot>volumeAdp/setDoubleParameter</slot>
        </connect>

        <!-- Adaptors visibility -->
        <connect channel="${VR_VISIBILITY_RECEIVER_CHANNEL}">
            <slot>volumeAdp/updateVisibility</slot>
        </connect>

        <connect channel="${3DNEGATO_VISIBILITY_RECEIVER_CHANNEL}">
            <slot>3DNegatoAdp/updateVisibility</slot>
        </connect>

        <connect channel="${MESHES_VISIBILITY_RECEIVER_CHANNEL}">
            <slot>modeSeriesAdp/updateVisibility</slot>
        </connect>

        <connect channel="${BOX_WIDGET_VISIBILITY_RECEIVER_CHANNEL}">
            <slot>volumeAdp/toggleWidgets</slot>
        </connect>

        <connect channel="${BOX_WIDGET_RESET_RECEIVER_CHANNEL}">
            <slot>clippingBoxResetSrv/update</slot>
            <slot>volumeAdp/updateClippingBox</slot>
        </connect>

        <connect channel="${SHAPE_EXTRUDER_ENABLE_TOOL_RECEIVER_CHANNEL}">
            <slot>shapeExtruderAdp/enableTool</slot>
        </connect>

        <connect channel="${SHAPE_EXTRUDER_TOOL_DISABLED_SENDER_CHANNEL}">
            <signal>shapeExtruderAdp/toolDisabled</signal>
        </connect>

        <connect channel="${SHAPE_EXTRUDER_REVERT_RECEIVER_CHANNEL}">
            <slot>shapeExtruderAdp/deleteLastMesh</slot>
        </connect>

        <connect channel="${SHAPE_EXTRUDER_CANCEL_LAST_CLICK_RECEIVER_CHANNEL}">
            <slot>shapeExtruderAdp/cancelLastClick</slot>
        </connect>

        <connect channel="${AXIS_VISIBILITY_RECEIVER_CHANNEL}">
            <slot>axisAdp/updateVisibility</slot>
        </connect>

        <connect channel="${PICKER_SENDER_CHANNEL}">
            <signal>pickerInteractorAdp/picked</signal>
            <signal>axialPickerInteractorAdp/picked</signal>
            <signal>sagittalPickerInteractorAdp/picked</signal>
            <signal>frontalPickerInteractorAdp/picked</signal>
        </connect>

        <connect channel="${WORLD_COORDS_LANDMARKS_CHANNEL}">
            <slot>3DNegatoAdp/updateSlicesFromWorld</slot>
        </connect>

        <connect channel="${NEGATO3D_TRANSPARENCY_CHANNEL}">
            <slot>3DNegatoAdp/setTransparency</slot>
        </connect>

        <!-- Slide view -->
        <connect>
            <signal>mainView/started</signal>
            <slot>topToolbarSliderView/show</slot>
        </connect>

        <!-- Manage full screen -->
        <connect>
            <signal>fullscreenAct/screenSelected</signal>
            <slot>fullscreenAct/hide</slot>
            <slot>mainSceneSrv/enableFullscreen</slot>
        </connect>

        <connect>
            <signal>mainSceneSrv/fullscreenSet</signal>
            <slot>windowedAct/setVisible</slot>
            <slot>windowedAct/setEnabled</slot>
        </connect>

        <connect>
            <signal>windowedAct/disabled</signal>
            <slot>fullscreenAct/show</slot>
        </connect>

        <!-- Display the picked voxel information -->
        <connect>
            <signal>3DNegatoAdp/pickedVoxel</signal>
            <slot>pickedVoxelTextAdp/setText</slot>
        </connect>

        <connect>
            <signal>axialNegatoAdp/pickedVoxel</signal>
            <slot>axialPickedVoxelTextAdp/setText</slot>
        </connect>

        <connect>
            <signal>frontalNegatoAdp/pickedVoxel</signal>
            <slot>frontalPickedVoxelTextAdp/setText</slot>
        </connect>

        <connect>
            <signal>sagittalNegatoAdp/pickedVoxel</signal>
            <slot>sagittalPickedVoxelTextAdp/setText</slot>
        </connect>

        <connect>
            <signal>shapeExtruderAdp/notified</signal>
            <slot>notifierSrv/pop</slot>
        </connect>

        <!-- Connects double click on landmark to slice moves. -->
        <connect>
            <signal>landmarksAdp/sendWorldCoord</signal>
            <signal>axialLandmarksAdp/sendWorldCoord</signal>
            <signal>frontalLandmarksAdp/sendWorldCoord</signal>
            <signal>sagittalLandmarksAdp/sendWorldCoord</signal>
            <slot>3DNegatoAdp/updateSlicesFromWorld</slot>
        </connect>

        <connect>
            <signal>windowedAct/clicked</signal>
            <slot>mainSceneSrv/disableFullscreen</slot>
            <slot>fullscreenAct/show</slot>
        </connect>

        <connect>
            <signal>snapshotAct/clicked</signal>
            <slot>imageWriterSrv/update</slot>
        </connect>

        <!-- ******************************* Start/Stop services ***************************************** -->

        <start uid="mainView" />
        <start uid="clippingBoxResetSrv" />
        <start uid="backgroundReaderSrv" />
        <start uid="imageWriterSrv" />
        <start uid="imageExtruderSrv" />
        <start uid="notifierSrv" />

        <start uid="globalCameraAdp" />
        <start uid="trackballInteractorAdp" />
        <start uid="pickerInteractorAdp" />
        <start uid="modeSeriesAdp" />
        <start uid="extrudedMeshesAdp" />
        <start uid="volumeAdp" />
        <start uid="landmarksAdp" />
        <start uid="multiDistancesAdp" />
        <start uid="axisAdp" />
        <start uid="pickedVoxelTextAdp" />
        <start uid="shapeExtruderAdp" />
        <start uid="snapshotAdp" />
        <start uid="orientationMarkerAdp" />

        <start uid="axialNegatoCameraAdp" />
        <start uid="frontalNegatoCameraAdp" />
        <start uid="sagittalNegatoCameraAdp" />

        <start uid="3DNegatoAdp" />

        <start uid="axialNegatoAdp" />
        <start uid="axialNegatoMultiDistancesAdp" />
        <start uid="axialPickerInteractorAdp" />
        <start uid="axialLandmarksAdp" />
        <start uid="axialPickedVoxelTextAdp" />

        <start uid="sagittalNegatoAdp" />
        <start uid="sagittalNegatoMultiDistancesAdp" />
        <start uid="sagittalPickerInteractorAdp" />
        <start uid="sagittalLandmarksAdp" />
        <start uid="sagittalPickedVoxelTextAdp" />

        <start uid="frontalNegatoAdp" />
        <start uid="frontalNegatoMultiDistancesAdp" />
        <start uid="frontalPickerInteractorAdp" />
        <start uid="frontalLandmarksAdp" />
        <start uid="frontalPickedVoxelTextAdp" />

        <start uid="axialNegatoSlicerSrv" />
        <start uid="frontalNegatoSlicerSrv" />
        <start uid="sagittalNegatoSlicerSrv" />

        <update uid="backgroundReaderSrv" />
        <update uid="imageExtruderSrv" />
        <update uid="shapeExtruderAdp" />

    </config>
</extension>
