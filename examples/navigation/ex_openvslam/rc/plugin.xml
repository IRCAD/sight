<plugin id="ex_openvslam">
    <requirement id="sight::module::ui::qt" />
    <requirement id="sight::module::service" />
    <requirement id="sight::module::viz::scene3d" />
    <requirement id="sight::module::viz::scene3d_qt" />
    <requirement id="sight::module::ui" />

    <extension implements="sight::app::extension::config">
        <id>ExOpenvslam_AppCfg</id>
        <config>
            <!-- ******************************* Objects declaration ****************************** -->

            <object uid="cameraSet" type="sight::data::camera_set" />
            <object uid="Frame" type="sight::data::image" />
            <object uid="Timeline" type="sight::data::frame_tl" />
            <object uid="CamMatrixTimeline" type="sight::data::matrix_tl" />
            <object uid="CameraPoseMatrix" type="sight::data::matrix4" />

            <object uid="openvslamPointCloud" type="sight::data::mesh" src="deferred" />
            <object uid="camera" type="sight::data::camera" src="deferred" />

            <!-- ******************************* UI declaration *********************************** -->

            <service uid="mainFrame" type="sight::module::ui::frame">
                <gui>
                    <menubar />
                    <toolbar />
                    <frame>
                        <name>ex_openvslam</name>
                        <icon>ex_openvslam/app.ico</icon>
                    </frame>
                </gui>
                <registry>
                    <menubar sid="menuBarView" start="true" />
                    <toolbar sid="toolbarView" start="true" />
                    <view sid="containerView" start="true" />
                </registry>
            </service>

            <service uid="menuBarView" type="sight::module::ui::menubar">
                <gui>
                    <layout>
                        <menu name="File" />
                    </layout>
                </gui>
                <registry>
                    <menu sid="menuFileView" start="true" />
                </registry>
            </service>

            <service uid="menuFileView" type="sight::module::ui::menu">
                <gui>
                    <layout>
                        <menuItem name="Load map (*.map)" shortcut="Ctrl+O" />
                        <menuItem name="Save map (*.map)" />
                        <menuItem name="Save trajectories (*.txt)" />
                        <menuItem name="Export map as mesh" shortcut="Ctrl+S" />
                        <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="loadMapAct" start="true" />
                    <menuItem sid="saveMapAct" start="true" />
                    <menuItem sid="saveTrajectoriesAct" start="true" />
                    <menuItem sid="savePCAct" start="true" />
                    <menuItem sid="quitAct" start="true" />
                </registry>
            </service>

            <service uid="toolbarView" type="sight::module::ui::toolbar">
                <gui>
                    <layout>
                        <menuItem name="Load calibration" icon="sight::module::ui::icons/calibration.svg" />
                        <editor />
                        <menuItem name="Start" icon="sight::module::ui::icons/play.svg" shortcut="Space" />
                        <menuItem name="Stop" icon="sight::module::ui::icons/stop.svg" />
                        <menuItem name="Pause" icon="sight::module::ui::icons/pause.svg" shortcut="Space" />
                        <menuItem name="Loop" icon="sight::module::ui::icons/loop.svg" style="check" />
                        <separator />
                        <menuItem name="Start openvslam" icon="sight::module::ui::icons/tracking.svg" />
                        <menuItem name="Stop openvslam" icon="sight::module::ui::icons/stop.svg" />
                        <menuItem name="Pause openvslam" icon="sight::module::ui::icons/pause.svg" style="check" />
                        <menuItem name="Reset openvslam" icon="sight::module::ui::icons/reset.svg" />
                        <menuItem name="Localization mode" icon="sight::module::ui::icons/localization.svg" style="check" />
                        <separator />
                        <menuItem name="Hide/Show point cloud" icon="sight::module::ui::icons/points.svg" style="check" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="loadCalibAct" start="true" />
                    <editor sid="videoSelectorSrv" />
                    <menuItem sid="startVideoAct" start="true" />
                    <menuItem sid="stopVideoAct" start="true" />
                    <menuItem sid="pauseVideoAct" start="true" />
                    <menuItem sid="loopVideoAct" start="true" />
                    <menuItem sid="startOpenvslamAct" start="true" />
                    <menuItem sid="stopOpenvslamAct" start="true" />
                    <menuItem sid="pauseOpenvslamAct" start="true" />
                    <menuItem sid="resetOpenvslamAct" start="true" />
                    <menuItem sid="enableLocalizationAct" start="true" />
                    <menuItem sid="showHidePointCloudAct" start="true" />
                </registry>
            </service>

            <service uid="containerView" type="sight::module::ui::view">
                <gui>
                    <layout type="sight::ui::layout::line">
                        <orientation value="horizontal" />
                        <view proportion="3" />
                        <view proportion="1" backgroundColor="#36393E" />
                    </layout>
                </gui>
                <registry>
                    <view sid="sceneViews" start="true" />
                    <view sid="editorViews" start="true" />
                </registry>
            </service>

            <service uid="sceneViews" type="sight::module::ui::view">
                <gui>
                    <layout type="sight::ui::layout::line">
                        <orientation value="vertical" />
                        <view proportion="1" />
                        <view proportion="0" backgroundColor="#36393E" />
                    </layout>
                </gui>
                <registry>
                    <view sid="genericSceneSrv" start="true" />
                    <view sid="videoView" start="true" />
                </registry>
            </service>

            <service uid="videoView" type="sight::module::ui::view">
                <gui>
                    <layout type="sight::ui::layout::line">
                        <orientation value="vertical" />
                        <view proportion="1" />
                        <view proportion="1" />
                    </layout>
                </gui>
                <registry>
                    <view sid="videoSliderSrv" start="true" />
                    <view sid="statusView" start="true" />
                </registry>
            </service>

            <service uid="statusView" type="sight::module::ui::view">
                <gui>
                    <layout type="sight::ui::layout::line">
                        <orientation value="horizontal" />
                        <view proportion="0" />
                        <view proportion="0" />
                        <view proportion="0" />
                    </layout>
                </gui>
                <registry>
                    <view sid="openvslamInitSrvStatus" start="true" />
                    <view sid="openvslamTrackingStatusSrv" start="true" />
                    <view sid="openvslamVocStatusSrv" start="true" />
                </registry>
            </service>

            <service uid="editorViews" type="sight::module::ui::view">
                <gui>
                    <layout type="sight::ui::layout::toolbox">
                        <orientation value="vertical" />
                        <view caption="Openvslam  Orb Parameters." expanded="true" />
                        <view caption="Openvslam  initializer Parameters. (Advanced)" expanded="false" />
                    </layout>
                </gui>
                <registry>
                    <view sid="openvslamOrbSrv" start="true" />
                    <view sid="openvslamInitSrv" start="true" />
                </registry>
            </service>

            <!-- ************************************* Action ************************************ -->

            <service uid="quitAct" type="sight::module::ui::quit" />

            <service uid="loadCalibAct" type="sight::module::ui::action" />
            <service uid="startVideoAct" type="sight::module::ui::action" />
            <service uid="stopVideoAct" type="sight::module::ui::action" />
            <service uid="pauseVideoAct" type="sight::module::ui::action" />
            <service uid="loopVideoAct" type="sight::module::ui::action" />
            <service uid="startOpenvslamAct" type="sight::module::ui::action" />
            <service uid="pauseOpenvslamAct" type="sight::module::ui::action" />
            <service uid="showHidePointCloudAct" type="sight::module::ui::action" />

            <service uid="enableLocalizationAct" type="sight::module::ui::action">
                <state checked="false" />
            </service>

            <service uid="saveMapAct" type="sight::module::ui::action" />
            <service uid="saveTrajectoriesAct" type="sight::module::ui::action" />
            <service uid="loadMapAct" type="sight::module::ui::action" />
            <service uid="resetOpenvslamAct" type="sight::module::ui::action" />
            <service uid="savePCAct" type="sight::module::ui::action" />
            <service uid="stopOpenvslamAct" type="sight::module::ui::action" />
            <service uid="HideAtStart" type="sight::module::ui::action" />

            <!-- ******************************* Begin Generic scene ******************************* -->

            <service uid="genericSceneSrv" type="sight::viz::scene3d::render">
                <scene>
                    <background topColor="#36393E" bottomColor="#36393E" />

                    <layer id="video" depth="2">
                        <viewport vOffset="0.01" width="0.3" height="0.3" hAlign="right" vAlign="top" />
                        <adaptor uid="videoAdp" />
                    </layer>
                    <layer id="default" depth="1" transparency="HybridTransparency" numPeels="3">
                        <adaptor uid="cameraAxisAdp" />
                        <adaptor uid="worldAxisAdp" />
                        <adaptor uid="pointCloudAdp" />
                        <adaptor uid="transformAdp" />
                        <adaptor uid="frustumAdp" />
                        <adaptor uid="frustumListAdp" />
                        <adaptor uid="trackballInteractorAdp" />
                    </layer>
                </scene>
            </service>

            <service uid="videoAdp" type="sight::module::viz::scene3d::adaptor::video" auto_connect="true">
                <in key="image" uid="Frame" />
            </service>

            <service uid="trackballInteractorAdp" type="sight::module::viz::scene3d::adaptor::trackball_camera" />

            <service uid="cameraAxisAdp" type="sight::module::viz::scene3d::adaptor::axis">
                <config transform="cameraMatrixTrf" length="30" />
            </service>

            <service uid="worldAxisAdp" type="sight::module::viz::scene3d::adaptor::axis">
                <config length="30" />
            </service>

            <service uid="pointCloudAdp" type="sight::module::viz::scene3d::adaptor::point_list" auto_connect="true">
                <in key="mesh" uid="openvslamPointCloud" />
                <config autoresetcamera="false" color="#ffffffff" radius="3.0f" textureName="circle.dds" />
            </service>

            <service uid="transformAdp" type="sight::module::viz::scene3d::adaptor::transform" auto_connect="true">
                <inout key="transform" uid="CameraPoseMatrix" />
                <config transform="cameraMatrixTrf" />
            </service>

            <service uid="frustumAdp" type="sight::module::viz::scene3d::adaptor::frustum" auto_connect="true">
                <in key="camera" uid="camera" />
                <config transform="cameraMatrixTrf" near="1" far="50" />
            </service>

            <service uid="frustumListAdp" type="sight::module::viz::scene3d::adaptor::frustum_list" auto_connect="true">
                <in key="camera" uid="camera" />
                <in key="transform" uid="CameraPoseMatrix" />
                <config nbMax="500" near="1.f" far="20.f" />
            </service>

            <!-- ************************************* Services ************************************ -->

            <!-- Calibration reader (here OpenCV's XML/YAML) -->
            <service uid="calibrationReaderSrv" type="sight::module::io::vision::open_cv_reader">
                <inout key="data" uid="cameraSet" />
            </service>

            <!-- extract a sight::data::camera from the sight::data::camera_set -->
            <service uid="cameraExtractorSrv" type="sight::module::data::get_camera">
                <inout key="cameraSet" uid="cameraSet" />
                <out group="camera">
                    <!-- destination -->
                    <key index="0" uid="camera" />
                </out>
            </service>

            <service uid="videoSliderSrv" type="sight::module::ui::qt::video::slider" />

            <service uid="openvslamInitSrvStatus" type="sight::module::ui::qt::status">
                <labels>
                    <name>Initialization</name>
                </labels>
                <red>Stopped</red>
                <green>Initialized</green>
                <orange>Initializing...</orange>
            </service>

            <service uid="openvslamTrackingStatusSrv" type="sight::module::ui::qt::status">
                <labels display="beside">
                    <name>Tracking</name>
                </labels>
                <red>Lost</red>
                <green>Tracking</green>
                <orange>relocalization</orange>
            </service>

            <service uid="openvslamVocStatusSrv" type="sight::module::ui::qt::status">
                <labels>
                    <name>Vocabulary File</name>
                </labels>
                <red>Unloaded</red>
                <orange>Loading</orange>
                <green>Loaded</green>
            </service>

            <service uid="openvslamOrbSrv" type="sight::module::ui::qt::parameters">
                <parameters>
                    <param type="int" name="Number of features per image" key="nFeatures" defaultValue="2000" min="10" max="10000" />
                    <param type="double" name="Scale factor between levels in the scale pyramid" key="scaleFactor" defaultValue="1.2" min="1" max="10.0" />
                    <param type="int" name="Number of levels in the scale pyramid" key="nLevels" defaultValue="8" min="0" max="20" />
                    <param type="int" name="Init. Fast Threshold" key="iniThFAST" defaultValue="20" min="1" max="100" />
                    <param type="int" name="Min. Fast Threshold" key="minThFAST" defaultValue="7" min="1" max="100" />
                    <param type="bool" name="Show Features" key="showFeatures" defaultValue="false" />
                    <param type="enum" name="Map Type" key="mapType" values="Global,Local" defaultValue="Global" />
                </parameters>
                <config sendAtStart="false" />
            </service>

            <service uid="openvslamInitSrv" type="sight::module::ui::qt::parameters">
                <parameters>
                    <param type="int" name="Number of RANSAC Iterations" key="initializer.numRansacIterations" defaultValue="100" min="1" max="1000" />
                    <param type="int" name="Minimum number of triangulated points" key="initializer.minNumTriangulatedPts" defaultValue="50" min="10" max="200" />
                    <param type="double" name="Parallax threshold" key="initializer.parallaxDegThr" defaultValue="1.0" min="1.0" max="30.0" />
                    <param type="double" name="Reprojection error threshold" key="initializer.reprojectionErrThr" defaultValue="4.0" min="0.0" max="10.0" />
                    <param type="int" name="Number of BA Iterations" key="initializer.numBAIterations" defaultValue="20" min="1" max="100" />
                    <param type="double" name="Initial scale magnitude" key="initializer.scalingFactor" defaultValue="200.0" min="0.1" max="1000.0" />
                </parameters>
                <config sendAtStart="false" />
            </service>

            <service uid="videoGrabberSrv" type="sight::module::io::video::frame_grabber">
                <in key="camera" uid="camera" />
                <inout key="frameTL" uid="Timeline" />
            </service>

            <service uid="frameUpdaterSrv" type="sight::module::sync::synchronizer">
                <in group="frameTL">
                    <key uid="Timeline" />
                </in>
                <inout group="frames">
                    <key uid="Frame" />
                </inout>
                <in group="matrixTL">
                    <key uid="CamMatrixTimeline" />
                </in>
                <inout group="matrix">
                    <key uid="CameraPoseMatrix" />
                </inout>
                <legacyAutoSync>true</legacyAutoSync>
            </service>

            <service uid="videoSelectorSrv" type="sight::module::ui::qt::video::camera">
                <inout key="camera" uid="camera" />
                <videoSupport>true</videoSupport>
            </service>

            <service uid="openvslamSrv" type="sight::module::navigation::openvslam::openvslam" worker="openvslamWorker">
                <in key="camera" uid="camera" />
                <in key="timeline" uid="Timeline" auto_connect="true" />
                <inout key="cameraMatrixTL" uid="CamMatrixTimeline" />
                <out key="pointCloud" uid="openvslamPointCloud" />
            </service>

            <service uid="meshWriterSrv" type="sight::module::ui::io::selector">
                <inout key="data" uid="openvslamPointCloud" />
                <type mode="writer" />
                <selection mode="include" />
                <addSelection service="sight::module::io::vtk::mesh_writer" />
            </service>

            <service uid="notifierSrv" type="sight::module::ui::qt::notifier">
                <message>Default Message</message>
                <parent uid="genericSceneSrv" />
                <channels>
                    <channel position="BOTTOM_LEFT" duration="3000" max="3" />
                </channels>
            </service>

            <!-- ******************************* Connections ***************************************** -->

            <connect>
                <signal>openvslamSrv/notified</signal>
                <slot>notifierSrv/pop</slot>
            </connect>
            <connect>
                <signal>loadCalibAct/clicked</signal>
                <slot>calibrationReaderSrv/update</slot>
            </connect>

            <connect>
                <signal>startVideoAct/clicked</signal>
                <slot>videoGrabberSrv/start_camera</slot>
            </connect>

            <connect>
                <signal>stopVideoAct/clicked</signal>
                <slot>videoGrabberSrv/stop_camera</slot>
            </connect>

            <connect>
                <signal>pauseVideoAct/clicked</signal>
                <slot>videoGrabberSrv/pause_camera</slot>
            </connect>

            <connect>
                <signal>loopVideoAct/clicked</signal>
                <slot>videoGrabberSrv/loop_video</slot>
            </connect>

            <connect>
                <signal>startOpenvslamAct/clicked</signal>
                <slot>frustumListAdp/clear</slot>
                <slot>resetOpenvslamAct/show</slot>
                <slot>startOpenvslamAct/hide</slot>
                <slot>stopOpenvslamAct/show</slot>
                <slot>openvslamSrv/start_tracking</slot>
                <slot>EditorViews/hide</slot>
                <slot>openvslamInitSrvStatus/change_to_orange</slot>
                <slot>saveMapAct/show</slot>
                <slot>savePCAct/show</slot>
            </connect>

            <connect>
                <signal>pauseOpenvslamAct/clicked</signal>
                <slot>openvslamSrv/pause_tracker</slot>
            </connect>

            <connect>
                <signal>showHidePointCloudAct/clicked</signal>
                <slot>pointCloudAdp/toggle_visibility</slot>
            </connect>

            <connect>
                <signal>enableLocalizationAct/is_checked</signal>
                <slot>openvslamSrv/enable_localization</slot>
            </connect>

            <connect>
                <signal>saveMapAct/clicked</signal>
                <slot>openvslamSrv/save_map</slot>
            </connect>

            <connect>
                <signal>saveTrajectoriesAct/clicked</signal>
                <slot>openvslamSrv/save_trajectories</slot>
            </connect>

            <connect>
                <signal>loadMapAct/clicked</signal>
                <slot>openvslamSrv/load_map</slot>
            </connect>

            <connect>
                <signal>resetOpenvslamAct/clicked</signal>
                <slot>openvslamSrv/reset_point_cloud</slot>
                <slot>frustumListAdp/clear</slot>
            </connect>

            <connect>
                <signal>savePCAct/clicked</signal>
                <slot>meshWriterSrv/update</slot>
            </connect>

            <connect>
                <signal>stopOpenvslamAct/clicked</signal>
                <slot>resetOpenvslamAct/hide</slot>
                <slot>stopOpenvslamAct/hide</slot>
                <slot>startOpenvslamAct/show</slot>
                <slot>openvslamSrv/stop_tracking</slot>
                <slot>EditorViews/show</slot>
                <slot>openvslamTrackingStatusSrv/change_to_red</slot>
                <slot>openvslamInitSrvStatus/change_to_red</slot>
            </connect>

            <connect>
                <signal>HideAtStart/updated</signal>
                <slot>stopOpenvslamAct/hide</slot>
                <slot>resetOpenvslamAct/hide</slot>
                <slot>saveMapAct/hide</slot>
                <slot>savePCAct/hide</slot>
                <slot>saveTrajectoriesAct/hide</slot>
                <slot>loadMapAct/hide</slot>
            </connect>

            <connect>
                <signal>camera/id_modified</signal>
                <slot>videoGrabberSrv/stop_camera</slot>
            </connect>

            <!-- Connect openvslam status -->
            <connect>
                <signal>openvslamSrv/tracking_initialized</signal>
                <slot>openvslamInitSrvStatus/change_to_green</slot>
            </connect>

            <connect>
                <signal>openvslamSrv/tracked</signal>
                <slot>openvslamTrackingStatusSrv/change_to_green</slot>
                <slot>saveTrajectoriesAct/show</slot>
            </connect>

            <connect>
                <signal>openvslamSrv/tracking_lost</signal>
                <signal>openvslamSrv/stopped</signal>
                <slot>openvslamTrackingStatusSrv/change_to_red</slot>
            </connect>

            <connect>
                <signal>openvslamSrv/voc_file_loaded</signal>
                <slot>openvslamVocStatusSrv/change_to_green</slot>
            </connect>

            <connect>
                <signal>openvslamSrv/voc_file_loading_started</signal>
                <slot>openvslamVocStatusSrv/change_to_orange</slot>
            </connect>

            <connect>
                <signal>openvslamSrv/voc_file_unloaded</signal>
                <slot>openvslamVocStatusSrv/change_to_red</slot>
            </connect>

            <!-- Connect video slider and frame grabber -->
            <connect>
                <signal>videoSliderSrv/position_changed</signal>
                <slot>videoGrabberSrv/set_position_video</slot>
            </connect>

            <connect>
                <signal>videoGrabberSrv/position_modified</signal>
                <slot>videoSliderSrv/set_position_slider</slot>
            </connect>

            <connect>
                <signal>videoGrabberSrv/duration_modified</signal>
                <slot>videoSliderSrv/set_duration_slider</slot>
            </connect>

            <!-- Connect parameters to Sopenvslam -->
            <connect>
                <signal>openvslamOrbSrv/int_changed</signal>
                <signal>openvslamInitSrv/int_changed</signal>
                <slot>openvslamSrv/set_int_parameter</slot>
            </connect>

            <connect>
                <signal>openvslamOrbSrv/double_changed</signal>
                <signal>openvslamInitSrv/double_changed</signal>
                <slot>openvslamSrv/set_double_parameter</slot>
            </connect>

            <connect>
                <signal>openvslamOrbSrv/bool_changed</signal>
                <slot>openvslamSrv/set_bool_parameter</slot>
            </connect>

            <connect>
                <signal>openvslamOrbSrv/enum_changed</signal>
                <slot>openvslamSrv/set_enum_parameter</slot>
            </connect>

            <connect>
                <signal>cameraSet/added_camera</signal>
                <slot>cameraExtractorSrv/update</slot>
                <slot>loadMapAct/show</slot>
            </connect>

            <connect>
                <signal>openvslam/map_loaded</signal>
                <slot>resetOpenvslamAct/show</slot>
                <slot>startOpenvslamAct/hide</slot>
                <slot>stopOpenvslamAct/show</slot>
                <slot>openvslamSrv/start_tracking</slot>
                <slot>EditorViews/hide</slot>
                <slot>openvslamInitSrvStatus/change_to_orange</slot>
                <slot>saveMapAct/show</slot>
                <slot>savePCAct/show</slot>
            </connect>

            <!-- ******************************* Start services ***************************************** -->

            <start uid="mainFrame" />
            <start uid="calibrationReaderSrv" />
            <start uid="videoSelectorSrv" />
            <start uid="cameraExtractorSrv" />
            <start uid="openvslamSrv" />
            <start uid="HideAtStart" />
            <start uid="videoGrabberSrv" />
            <start uid="frameUpdaterSrv" />
            <start uid="meshWriterSrv" />
            <start uid="videoAdp" />
            <start uid="trackballInteractorAdp" />
            <start uid="cameraAxisAdp" />
            <start uid="worldAxisAdp" />
            <start uid="pointCloudAdp" />
            <start uid="transformAdp" />
            <start uid="frustumAdp" />
            <start uid="frustumListAdp" />
            <start uid="notifierSrv" />

            <!-- ******************************* Update services ***************************************** -->

            <update uid="HideAtStart" />
        </config>
    </extension>
</plugin>
