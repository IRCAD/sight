<plugin id="ExFrameByFrame">

    <requirement id="sight::module::ui::qt" />
    <requirement id="sight::module::service" />
    <requirement id="sight::module::viz::scene3d" />
    <requirement id="sight::module::viz::scene3d_qt" />
    <requirement id="sight::module::ui" />

    <extension implements="sight::app::extension::config">
        <id>ExFrameByFrame_AppCfg</id>
        <config>

            <!-- ******************************* Objects declaration ****************************** -->

            <object uid="camera" type="sight::data::camera" />
            <object uid="frameTL" type="sight::data::frame_tl">
                <value>100</value>
            </object>
            <object uid="videoImage" type="sight::data::image" />

            <!-- ******************************* UI declaration *********************************** -->

            <service uid="mainFrame" type="sight::module::ui::frame">
                <gui>
                    <frame>
                        <name>ExFrameByFrame</name>
                        <icon>ExFrameByFrame/app.ico</icon>
                    </frame>
                    <toolbar />
                </gui>
                <registry>
                    <toolbar sid="toolbarView" start="true" />
                    <view sid="genericSceneSrv" start="true" />
                </registry>
            </service>

            <service uid="toolbarView" type="sight::module::ui::toolbar">
                <gui>
                    <layout>
                        <editor />
                        <menuItem name="Start" icon="sight::module::ui::flaticons/GreenStart.svg" shortcut="Space" />
                        <menuItem name="Stop" icon="sight::module::ui::flaticons/RedStop.svg" />
                        <menuItem name="Pause" icon="sight::module::ui::flaticons/OrangePause.svg" shortcut="Space" />
                        <spacer />
                        <menuItem name="Previous" />
                        <menuItem name="Next" />
                    </layout>
                </gui>
                <registry>
                    <editor sid="videoSelectorSrv" start="true" />
                    <menuItem sid="startVideoAct" start="true" />
                    <menuItem sid="stopVideoAct" start="true" />
                    <menuItem sid="pauseVideoAct" start="true" />
                    <menuItem sid="previousImageAct" start="true" />
                    <menuItem sid="nextImageAct" start="true" />
                </registry>
            </service>

            <!-- ************************************* Action ************************************ -->

            <service uid="startVideoAct" type="sight::module::ui::action" />
            <service uid="stopVideoAct" type="sight::module::ui::action" />
            <service uid="pauseVideoAct" type="sight::module::ui::action" />
            <service uid="previousImageAct" type="sight::module::ui::action" />
            <service uid="nextImageAct" type="sight::module::ui::action" />

            <!-- ******************************* Begin Generic scene ******************************* -->

            <service uid="genericSceneSrv" type="sight::viz::scene3d::render">
                <scene renderMode="sync">
                    <background topColor="#36393E" bottomColor="#36393E" />

                    <layer id="default" order="1">
                        <adaptor uid="videoAdp" />
                    </layer>
                </scene>
            </service>

            <service uid="videoAdp" type="sight::module::viz::scene3d::adaptor::video" auto_connect="true">
                <in key="image" uid="videoImage" />
            </service>

            <!-- ************************************* Services ************************************ -->

            <service uid="videoSelectorSrv" type="sight::module::ui::qt::video::camera">
                <inout key="camera" uid="camera" />
                <videoSupport>true</videoSupport>
            </service>

            <service uid="videoGrabberSrv" type="sight::module::io::video::frame_grabber">
                <in key="camera" uid="camera" />
                <inout key="frameTL" uid="frameTL" />
                <oneShot>true</oneShot>
                <useTimelapse>false</useTimelapse>
                <createTimestamp>true</createTimestamp>
            </service>

            <service uid="frameUpdaterSrv"  type="sight::module::sync::synchronizer" worker="videoWorker">
                <in group="frameTL">
                    <key uid="frameTL" />
                </in>
                <inout group="frames">
                    <key uid="videoImage" />
                </inout>
            </service>

            <!-- ******************************* Connections ***************************************** -->

            <connect>
                <signal>startVideoAct/clicked</signal>
                <slot>videoGrabberSrv/startCamera</slot>
            </connect>

            <connect>
                <signal>stopVideoAct/clicked</signal>
                <slot>videoGrabberSrv/stopCamera</slot>
            </connect>

            <connect>
                <signal>pauseVideoAct/clicked</signal>
                <slot>videoGrabberSrv/pauseCamera</slot>
            </connect>

            <connect>
                <signal>previousImageAct/clicked</signal>
                <slot>videoGrabberSrv/previousImage</slot>
            </connect>

            <connect>
                <signal>nextImageAct/clicked</signal>
                <slot>videoGrabberSrv/nextImage</slot>
            </connect>

            <connect>
                <signal>camera/idModified</signal>
                <slot>videoGrabberSrv/stopCamera</slot>
            </connect>

            <connect>
                <signal>frameUpdaterSrv/synchronizationDone</signal>
                <slot>genericSceneSrv/request_render</slot>
                <slot>frameUpdaterSrv/synchronize</slot>
            </connect>

            <!-- ******************************* Start services ***************************************** -->

            <start uid="mainFrame" />
            <start uid="videoGrabberSrv" />
            <start uid="frameUpdaterSrv" />
            <start uid="videoAdp" />

        </config>
    </extension>
</plugin>