<!--
This example shows how to display notifications popups.

Mode 1: Using SNotifier service (recommanded) and appropriate signals from IService (notifyInfo, notifySuccess, notifyFailure)
connected to SNotifier slots popInfo/Failure/Success.

Mode 2: Standalone by calling directly the notification dialog inside your service (see SDisplayTestNotifications.cpp)
this mode is not recommanded since each service can pop notification without any knowlegde of how many notifications
are already displayed and where they are displayed on screen.

-->
<plugin id="ExNotifications" library="true">

    <requirement id="sight::module::service" />
    <requirement id="sight::module::ui::qt" />
    <requirement id="sight::module::ui::base" />

    <extension implements="::sight::service::extension::Factory" >
        <type>sight::ui::base::IAction</type>
        <service>ExNotifications::SDisplayTestNotifications</service>
        <object>sight::data::Object</object>
    </extension>

    <extension implements="::sight::service::extension::AppConfig" >
        <id>ExNotifications_AppCfg</id>
        <config>

            <!-- ******************************* UI declaration *********************************** -->

            <service uid="mainFrame" type="sight::module::ui::base::SFrame" >
                <gui>
                    <frame>
                        <name>ExNotifications</name>
                        <icon>ExNotifications/app.ico</icon>
                        <minSize width="800" height="600" />
                    </frame>
                    <toolBar/>
                </gui>
                <registry>
                    <toolBar sid="toolbarView" start="true" />
                    <view sid="mainview" start="true" />
                </registry>
            </service>

           <service uid="toolbarView" type="sight::module::ui::base::SToolBar" >
                <gui>
                    <layout>
                        <editor/>
                        <editor/>
                        <editor/>
                        <separator/>
                        <menuItem name="NOTIFY" />
                        <spacer />
                        <separator/>
                        <menuItem name="Color Theme" />
                    </layout>
                </gui>
                <registry>
                    <editor sid="useNotifierAct" start="true" />
                    <editor sid="typeAct" start="true" />
                    <editor sid="positionAct" start="true" />
                    <menuItem sid="notifyAct" start="true" />
                    <menuItem sid="changeThemeAct" start ="true" />
                </registry>
            </service>

            <service uid="mainview" type="sight::module::ui::base::SView" >
                <gui>
                    <layout type="sight::ui::base::LineLayoutManager" >
                        <orientation value="vertical" />
                    </layout>
                </gui>
                <registry>
                </registry>
            </service>

            <!-- ************************************* Action ************************************ -->

            <service uid="useNotifierAct" type="sight::module::ui::qt::SParameters" >
                <parameters>
                    <param type="bool" name="Use SNotifier to centralize." key="useSNotifier" defaultValue="true" />
                </parameters>
            </service>

            <service uid="typeAct" type="sight::module::ui::qt::SParameters" >
                <parameters>
                    <param type="enum" name="Type" key="type" defaultValue="INFO" values="INFO,SUCCESS,FAILURE" />
                </parameters>
            </service>

            <service uid="positionAct" type="sight::module::ui::qt::SParameters" >
                <parameters>
                    <param type="enum" name="Position" key="position" defaultValue="TOP_RIGHT" values="ALL,TOP_LEFT,TOP_RIGHT,CENTERED_TOP,CENTERED,BOTTOM_LEFT,BOTTOM_RIGHT,CENTERED_BOTTOM" />
                </parameters>
            </service>

            <service uid="notifyAct" type="sight::module::ui::base::com::SSlotCaller" >
                <slots>
                    <slot>testNotifierSrv/update</slot>
                </slots>
            </service>

            <!-- preference to apply new theme on app -->
            <service uid="changeThemeAct" type="sight::module::ui::qt::SPreferencesConfiguration" >
                <preference>
                    <type>combobox</type>
                    <name>Color Theme</name>
                    <key>THEME</key>
                    <values>DEFAULT,DARKSTYLE,FLATDARK</values>
                    <default_value>FLATDARK</default_value>
                </preference>
            </service>

            <!-- ******************************* Services ******************************* -->

            <!-- Dummy service only used to test notifications -->
            <service uid="testNotifierSrv" type="ExNotifications::SDisplayTestNotifications" />

            <!-- SNotifier listen to all the connected service & display queued notification at the same place (here TOP_RIGHT)-->
            <service uid="notifierSrv" type="sight::module::ui::qt::SNotifier" >
                <parent uid="mainview" /> <!-- Parent container where notifications will be displayed, use the xmlattr uid hack to generate the generic_uid prefix of "maiview" -->
                <message>Default Message</message><!-- Default message printed if empty string is emitted in notify* signals -->
                <position>TOP_RIGHT</position><!-- Default position for ALL notifications (overriden by setEnumParameter slot) -->
                <maxNotifications>3</maxNotifications> <!-- Maximum number of queued notifications -->
                <duration>3000</duration><!-- Time the notifications are displayed on screen ( + 1sec for fade in & fade out effects) -->
            </service>

            <service uid="::sight::module::ui::qtChangerSrv" type="sight::module::ui::qt::SStyleSelector" />

            <!-- ******************************* Connections ***************************************** -->

            <!-- connection from IService notify signals to the SNotifier,you can add as many service as you need -->
            <connect>
                <signal>testNotifierSrv/infoNotified</signal>
                <slot>notifierSrv/popInfo</slot>
            </connect>

            <connect>
                <signal>testNotifierSrv/successNotified</signal>
                <slot>notifierSrv/popSuccess</slot>
            </connect>

            <connect>
                <signal>testNotifierSrv/failureNotified</signal>
                <slot>notifierSrv/popFailure</slot>
            </connect>

            <!-- Others connections -->
            <connect>
                <signal>positionAct/enumChanged</signal>
                <slot>testNotifierSrv/setEnumParameter</slot>
                <slot>notifierSrv/setEnumParameter</slot>
            </connect>

            <connect>
                <signal>typeAct/enumChanged</signal>
                <slot>testNotifierSrv/setEnumParameter</slot>
            </connect>

            <connect>
                <signal>useNotifierSrv/boolChanged</signal>
                <slot>testNotifierSrv/setBoolParameter</slot>
            </connect>

            <connect>
                <signal>changeThemeAct/parametersModified</signal>
                <slot>styleChangerSrv/updateFromPreferences</slot>
            </connect>

            <!-- ******************************* Start services ***************************************** -->

            <start uid="mainFrame" />
            <start uid="notifierSrv" />
            <start uid="testNotifierSrv" />
            <start uid="::sight::module::ui::qtChangerSrv" />

        </config>
    </extension>


</plugin>
