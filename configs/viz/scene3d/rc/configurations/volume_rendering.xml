<extension implements="sight::app::extension::config">
    <id>sight::config::viz::scene3d::volumeRendering</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="TOGGLE_VIEW_VISIBILITY_SENDER_CHANNEL" />
        <param name="VR_BOOL_PARAM_RECEIVER_CHANNEL" />
        <param name="VR_INT_PARAM_RECEIVER_CHANNEL" />
        <param name="VR_DOUBLE_PARAM_RECEIVER_CHANNEL" />
        <param name="VR_VISIBILITY_RECEIVER_CHANNEL" />
        <param name="3DNEGATO_VISIBILITY_RECEIVER_CHANNEL" />
        <param name="MESHES_VISIBILITY_RECEIVER_CHANNEL" />
        <param name="BOX_WIDGET_VISIBILITY_RECEIVER_CHANNEL" />
        <param name="BOX_WIDGET_RESET_RECEIVER_CHANNEL" />
        <param name="SHAPE_EXTRUDER_ENABLE_TOOL_RECEIVER_CHANNEL" />
        <param name="SHAPE_EXTRUDER_TOOL_DISABLED_SENDER_CHANNEL" />
        <param name="SHAPE_EXTRUDER_UNDO_RECEIVER_CHANNEL" />
        <param name="SHAPE_EXTRUDER_RESET_RECEIVER_CHANNEL" />
        <param name="AXIS_VISIBILITY_RECEIVER_CHANNEL" />
        <param name="WORLD_COORDS_LANDMARKS_CHANNEL" />
        <param name="NEGATO3D_TRANSPARENCY_CHANNEL" />
        <param name="DISTANCE_ACTIVATION_CHANNEL" default="DISTANCE_ACTIVATION_CHANNEL" />
        <param name="DISTANCE_DEACTIVATION_CHANNEL" default="DISTANCE_DEACTIVATION_CHANNEL" />
        <param name="LANDMARKS_EDIT_MODE_RECEIVER_CHANNEL" />
        <param name="LANDMARKS_GROUP_SELECTED_RECEIVER_CHANNEL" />
        <param name="REMOVE_ALL_LANDMARKS_RECEIVER_CHANNEL" />
        <param name="REMOVE_ALL_DISTANCES_RECEIVER_CHANNEL" />
        <param name="LANDMARKS_EDIT_MODE_CHANGED_SENDER_CHANNEL" />
        <param name="modelSeries" />
        <param name="image" />
        <param name="volumeTF" />
        <param name="extrudedModelSeries" />
    </parameters>
    <config>
        <!-- ******************************* Objects declaration ****************************** -->

        <object uid="${modelSeries}" type="sight::data::model_series" src="deferred" />
        <object uid="${image}" type="sight::data::image_series" src="deferred" />
        <object uid="${volumeTF}" type="sight::data::transfer_function" src="ref" />
        <object uid="${extrudedModelSeries}" type="sight::data::model_series" src="ref" />

        <object uid="mask" type="sight::data::image" />
        <object uid="clippingMatrix" type="sight::data::matrix4" />
        <object uid="identityMatrix" type="sight::data::matrix4" />
        <object uid="snapshot" type="sight::data::image" />
        <object uid="globalCamera" type="sight::data::matrix4" />

        <!-- ******************************* UI declaration *********************************** -->

        <service uid="sceneOverlayView" type="sight::module::ui::view">
            <gui>
                <layout type="sight::ui::layout::overlay">
                    <view />
                    <view x="0" y="0" minWidth="200" minHeight="100" />
                </layout>
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <view sid="sceneView" start="true" />
                <view sid="topToolbarSliderView" start="true" />
            </registry>
        </service>

        <service uid="sceneView" type="sight::module::ui::view">
            <gui>
                <layout type="sight::ui::layout::line">
                    <orientation value="vertical" />
                    <view proportion="1" />
                    <view proportion="0" QSSClass="view_background" spacing="0" />
                </layout>
            </gui>
            <registry>
                <view sid="sceneSrv" start="true" />
                <view wid="sliderView" />
            </registry>
        </service>

        <service uid="topToolbarSliderView" type="sight::module::ui::view">
            <gui>
                <toolbar backgroundColor="#00000000" />
                <layout type="sight::ui::layout::line">
                    <orientation value="vertical" />
                </layout>
            </gui>
            <registry>
                <toolbar sid="topToolbarView" start="true" />
            </registry>
        </service>

        <service uid="topToolbarView" type="sight::module::ui::toolbar">
            <gui>
                <layout>
                    <menuItem name="Fullscreen" icon="sight::module::ui::icons/maximize.svg" />
                    <menuItem name="Windowed" icon="sight::module::ui::icons/restore.svg" shortcut="1" />
                    <menuItem name="Snapshot" icon="sight::module::ui::icons/frame.svg" shortcut="CTRL+S" />
                    <spacer />
                </layout>
            </gui>
            <registry>
                <menuItem sid="fullscreenAct" start="true" />
                <menuItem sid="windowedAct" start="true" />
                <menuItem sid="snapshotAct" start="true" />
            </registry>
        </service>

        <!-- ******************************* Begin Generic scene ******************************* -->

        <service uid="sceneSrv" type="sight::viz::scene3d::render">
            <scene>
                <background material="bkg_gradient" />

                <layer id="gridLayer" order="1">
                    <adaptor uid="gridCameraAdp" />
                    <adaptor uid="gridAdp" />
                </layer>

                <layer id="defaultLayer" order="2" transparency="Default">
                    <adaptor uid="globalCameraAdp" />
                    <adaptor uid="trackballInteractorAdp" />
                    <adaptor uid="pickerInteractorAdp" />
                    <adaptor uid="modeSeriesAdp" />
                    <adaptor uid="3DNegatoAdp" />
                    <adaptor uid="volumeAdp" />
                    <adaptor uid="landmarksAdp" />
                    <adaptor uid="multiDistancesAdp" />
                    <adaptor uid="axisAdp" />
                    <adaptor uid="pickedVoxelTextAdp" />
                    <adaptor uid="shapeExtruderAdp" />
                    <adaptor uid="snapshotAdp" />
                    <adaptor uid="eventAdp" />
                </layer>

                <layer id="orientationMarkerLayer" order="3">
                    <viewport hOffset="0" vOffset="0" width="0.2" height="0.2" hAlign="right" vAlign="bottom" />
                    <adaptor uid="orientationMarkerAdp" />
                </layer>
            </scene>
        </service>

        <service uid="globalCameraAdp" type="sight::module::viz::scene3d::adaptor::camera">
            <inout key="transform" uid="globalCamera" />
        </service>

        <service uid="gridCameraAdp" type="sight::module::viz::scene3d::adaptor::camera">
            <inout key="transform" uid="globalCamera" />
        </service>

        <service uid="trackballInteractorAdp" type="sight::module::viz::scene3d::adaptor::trackball_camera">
            <config priority="0" />
        </service>

        <service uid="pickerInteractorAdp" type="sight::module::viz::scene3d::adaptor::picker">
            <config queryMask="0x40000000" priority="1" />
        </service>

        <service uid="modeSeriesAdp" type="sight::module::viz::scene3d::adaptor::model_series" auto_connect="true">
            <in key="model" uid="${modelSeries}" />
            <config queryFlags="0x40000000" autoresetcamera="true" />
        </service>

        <service uid="volumeAdp" type="sight::module::viz::scene3d::adaptor::volume_render">
            <in key="image" uid="${image}" />
            <in key="mask" uid="mask" />
            <in key="tf" uid="${volumeTF}" />
            <inout key="clippingMatrix" uid="clippingMatrix" />
            <config widgets="false" preintegration="false" autoresetcamera="true" samples="1200" />
        </service>

        <service uid="3DNegatoAdp" type="sight::module::viz::scene3d::adaptor::negato3d">
            <in key="image" uid="${image}" />
            <inout key="tf" uid="${volumeTF}" />
            <config queryFlags="0x40000000" interactive="true" priority="2" />
        </service>

        <service uid="landmarksAdp" type="sight::module::viz::scene3d_qt::adaptor::fiducials::point" auto_connect="true">
            <inout key="imageSeries" uid="${image}" />
            <config fontSize="16" priority="4" initialGroup="Group_0" initialSize="10.0" viewDistance="allSlices" />
        </service>

        <service uid="multiDistancesAdp" type="sight::module::viz::scene3d_qt::adaptor::fiducials::ruler" auto_connect="true">
            <inout key="image" uid="${image}" />
            <config fontSize="16" radius="4.5" queryFlags="0x40000000" priority="3" />
        </service>

        <service uid="axisAdp" type="sight::module::viz::scene3d::adaptor::axis">
            <config visible="false" origin="true" label="false" />
        </service>

        <service uid="pickedVoxelTextAdp" type="sight::module::viz::scene3d::adaptor::text">
            <text />
            <config x="0.01" y="0.01" hAlign="right" vAlign="top" color="#ffc000" />
        </service>

        <service uid="shapeExtruderAdp" type="sight::module::viz::scene3d::adaptor::shape_extruder">
            <inout key="extrudedMeshes" uid="${extrudedModelSeries}" />
            <config lineColor="#FFC66D" edgeColor="#D35151" />
        </service>

        <service uid="snapshotAdp" type="sight::module::viz::scene3d::adaptor::fragments_info">
            <inout key="image" uid="snapshot" />
        </service>

        <service uid="eventAdp" type="sight::module::viz::scene3d::adaptor::event">
            <event type="buttonDoublePress" buttons="left" modifiers="none" />
        </service>

        <service uid="orientationMarkerAdp" type="sight::module::viz::scene3d::adaptor::orientation_marker" auto_connect="true">
            <in key="matrix" uid="globalCamera" />
        </service>

        <service uid="gridAdp" type="sight::module::viz::scene3d::adaptor::grid">
            <config size="5000" step="50" color="#505050" elevation="400" dashLength="10" />
        </service>

        <!-- Reset the clipping box matreix -->
        <service uid="clippingBoxResetSrv" type="sight::module::data::copy">
            <in key="source" uid="identityMatrix" />
            <inout key="target" uid="clippingMatrix" />
        </service>

        <service uid="imageExtruderSrv" type="sight::module::filter::image::image_extruder" worker="EXTRUSION_THREAD">
            <in key="meshes" uid="${extrudedModelSeries}" />
            <in key="image" uid="${image}" />
            <inout key="mask" uid="mask" />
        </service>

        <service uid="notifierSrv" type="sight::module::ui::qt::notifier">
            <parent uid="mainview" />
            <channels>
                <channel position="BOTTOM_LEFT" duration="3000" max="3" />
            </channels>
        </service>

        <!-- Write the snapshot image -->
        <service uid="imageWriterSrv" type="sight::module::io::bitmap::writer">
            <in key="data" uid="snapshot" />
            <dialog policy="always" />
            <backends enable="all" mode="best" />
        </service>

        <service uid="sliderCfg" type="sight::app::config_controller">
            <appConfig id="sight::config::viz::image::imageSlider" />
            <parameter replace="WID_PARENT" by="sliderView" />
            <parameter replace="sliceIndex" by="axial" />
            <parameter replace="enableSliceSlider" by="false" />
            <parameter replace="enableSliceType" by="false" />
            <parameter replace="enableOpacity" by="true" />
            <inout group="data">
                <key name="image" uid="${image}" />
                <key name="transferFunction" uid="${volumeTF}" />
            </inout>
        </service>

        <!-- ************************************* Actions ************************************ -->

        <!-- Set the view in full screen -->
        <service uid="fullscreenAct" type="sight::module::ui::viz::screen_selector">
            <config mode="select" />
        </service>

        <!-- Set the view in windowed  -->
        <service uid="windowedAct" type="sight::module::ui::action">
            <state visible="false" />
        </service>

        <!-- Save the snapshot image -->
        <service uid="snapshotAct" type="sight::module::ui::action" />

        <!-- ******************************* Connections ***************************************** -->

        <!-- Volume rendering parameters -->
        <connect channel="${VR_BOOL_PARAM_RECEIVER_CHANNEL}">
            <slot>volumeAdp/set_bool_parameter</slot>
        </connect>

        <connect channel="${VR_INT_PARAM_RECEIVER_CHANNEL}">
            <slot>volumeAdp/set_int_parameter</slot>
        </connect>

        <connect channel="${VR_DOUBLE_PARAM_RECEIVER_CHANNEL}">
            <slot>volumeAdp/set_double_parameter</slot>
        </connect>

        <!-- Adaptors visibility -->
        <connect channel="${VR_VISIBILITY_RECEIVER_CHANNEL}">
            <slot>volumeAdp/update_visibility</slot>
        </connect>

        <connect channel="${3DNEGATO_VISIBILITY_RECEIVER_CHANNEL}">
            <slot>3DNegatoAdp/update_visibility</slot>
        </connect>

        <connect channel="${MESHES_VISIBILITY_RECEIVER_CHANNEL}">
            <slot>modeSeriesAdp/update_visibility</slot>
        </connect>

        <connect channel="${BOX_WIDGET_VISIBILITY_RECEIVER_CHANNEL}">
            <slot>volumeAdp/toggle_widgets</slot>
        </connect>

        <connect channel="${BOX_WIDGET_RESET_RECEIVER_CHANNEL}">
            <slot>clippingBoxResetSrv/update</slot>
            <slot>volumeAdp/update_clipping_box</slot>
        </connect>

        <connect channel="${SHAPE_EXTRUDER_ENABLE_TOOL_RECEIVER_CHANNEL}">
            <slot>shapeExtruderAdp/enable_tool</slot>
        </connect>

        <connect channel="${SHAPE_EXTRUDER_TOOL_DISABLED_SENDER_CHANNEL}">
            <signal>shapeExtruderAdp/tool_disabled</signal>
        </connect>

        <connect channel="${SHAPE_EXTRUDER_UNDO_RECEIVER_CHANNEL}">
            <slot>shapeExtruderAdp/undo</slot>
        </connect>

        <connect channel="${SHAPE_EXTRUDER_RESET_RECEIVER_CHANNEL}">
            <slot>shapeExtruderAdp/reset</slot>
        </connect>

        <connect channel="${AXIS_VISIBILITY_RECEIVER_CHANNEL}">
            <slot>axisAdp/update_visibility</slot>
        </connect>

        <connect channel="${WORLD_COORDS_LANDMARKS_CHANNEL}">
            <slot>3DNegatoAdp/update_slices_from_world</slot>
        </connect>

        <connect channel="${NEGATO3D_TRANSPARENCY_CHANNEL}">
            <slot>3DNegatoAdp/set_transparency</slot>
        </connect>

        <connect channel="${LANDMARKS_EDIT_MODE_RECEIVER_CHANNEL}">
            <slot>landmarksAdp/change_edit_mode</slot>
        </connect>

        <connect channel="${LANDMARKS_GROUP_SELECTED_RECEIVER_CHANNEL}">
            <slot>landmarksAdp/set_current_group</slot>
        </connect>

        <connect channel="${REMOVE_ALL_LANDMARKS_RECEIVER_CHANNEL}">
            <slot>landmarksAdp/remove_all</slot>
        </connect>

        <connect channel="${REMOVE_ALL_DISTANCES_RECEIVER_CHANNEL}">
            <slot>multiDistancesAdp/remove_all</slot>
        </connect>

        <connect channel="${LANDMARKS_EDIT_MODE_CHANGED_SENDER_CHANNEL}">
            <signal>landmarksAdp/edit_mode_changed</signal>
        </connect>

        <!-- Slide view -->
        <connect>
            <signal>sceneView/started</signal>
            <slot>topToolbarSliderView/show</slot>
        </connect>

        <!-- Manage full screen -->
        <connect>
            <signal>fullscreenAct/screen_selected</signal>
            <slot>sceneSrv/enable_fullscreen</slot>
        </connect>

        <connect>
            <signal>sceneSrv/fullscreen_set</signal>
            <slot>windowedAct/show</slot>
            <slot>fullscreenAct/hide</slot>
        </connect>

        <connect>
            <signal>windowedAct/clicked</signal>
            <slot>sceneSrv/disable_fullscreen</slot>
        </connect>

        <connect>
            <signal>sceneSrv/fullscreen_unset</signal>
            <slot>windowedAct/hide</slot>
            <slot>fullscreenAct/show</slot>
        </connect>

        <!-- Display the picked voxel information -->
        <connect>
            <signal>3DNegatoAdp/picked_voxel</signal>
            <slot>pickedVoxelTextAdp/set_text</slot>
        </connect>

        <connect>
            <signal>shapeExtruderAdp/notified</signal>
            <slot>notifierSrv/pop</slot>
        </connect>

        <!-- Connects double click on landmark to slice moves. -->
        <connect>
            <signal>landmarksAdp/send_world_coord</signal>
            <slot>3DNegatoAdp/update_slices_from_world</slot>
        </connect>

        <connect>
            <signal>snapshotAct/clicked</signal>
            <slot>imageWriterSrv/update</slot>
        </connect>

        <!-- Enlarge CT view by double-clicking it -->

        <connect channel="${TOGGLE_VIEW_VISIBILITY_SENDER_CHANNEL}">
            <signal>eventAdp/triggered</signal>
        </connect>

        <!-- distance channels -->

        <connect channel="${DISTANCE_ACTIVATION_CHANNEL}">
            <slot>multiDistancesAdp/activate_distance_tool</slot>
        </connect>

        <connect channel="${DISTANCE_DEACTIVATION_CHANNEL}">
            <signal>multiDistancesAdp/deactivate_distance_tool</signal>
        </connect>

        <!-- ******************************* Start/Stop services ***************************************** -->

        <start uid="sceneOverlayView" />
        <start uid="clippingBoxResetSrv" />
        <start uid="imageExtruderSrv" />
        <start uid="notifierSrv" />
        <start uid="imageWriterSrv" />

        <start uid="globalCameraAdp" />
        <start uid="trackballInteractorAdp" />
        <start uid="pickerInteractorAdp" />
        <start uid="modeSeriesAdp" />
        <start uid="volumeAdp" />
        <start uid="landmarksAdp" />
        <start uid="multiDistancesAdp" />
        <start uid="axisAdp" />
        <start uid="pickedVoxelTextAdp" />
        <start uid="shapeExtruderAdp" />
        <start uid="snapshotAdp" />
        <start uid="eventAdp" />
        <start uid="orientationMarkerAdp" />
        <start uid="3DNegatoAdp" />
        <start uid="gridCameraAdp" />
        <start uid="gridAdp" />
        <start uid="sliderCfg" />

        <update uid="imageExtruderSrv" />
        <update uid="shapeExtruderAdp" />
    </config>
</extension>
