<plugin id="sight::module::geometry::vision" library="true" >
    <requirement id="sight::module::service"/>
    <extension implements="::sight::service::extension::Factory">
         <type>sight::service::IController</type>
         <service>sight::module::geometry::vision::SChessBoardDetector</service>
         <object key="image">sight::data::Image</object>
         <object key="calInfo">sight::data::CalibrationInfo</object>
         <object key="detection">sight::data::PointList</object>
         <desc>Detects chessboards in images and pushes detected points to CalibrationInfo objects.</desc>
    </extension>


    <extension implements="::sight::service::extension::Factory">
         <type>sight::service::IController</type>
         <service>sight::module::geometry::vision::SChessboardReprojection</service>
         <desc>Reprojects the chessboard model onto the detected points using the estimated camera pose and calibration.</desc>
    </extension>
    <extension implements="::sight::service::extension::Factory">
         <type>sight::service::IOperator</type>
         <service>sight::module::geometry::vision::SDistortion</service>
         <object key="camera">sight::data::Camera</object>
         <object key="input">sight::data::Image</object>
         <object key="output">sight::data::Image</object>
         <object key="map">sight::data::Image</object>
         <desc>Distort or undistort an image according to camera intrinsics and distortion coefficients.</desc>
    </extension>


    <extension implements="::sight::service::extension::Factory">
         <type>sight::service::IController</type>
         <service>sight::module::geometry::vision::SMarkerToPoint</service>
         <object>sight::data::PointList</object>
         <desc>This service update a pointlist with the center of the marker (from a matrixTL) when the extractMarker slot is</desc>
    </extension>

    <extension implements="::sight::service::extension::Factory">
         <type>sight::geometry::vision::ICalibration</type>
         <service>sight::module::geometry::vision::SOpenCVExtrinsic</service>
         <object>sight::data::CameraSeries</object>
         <desc>SOpenCVExtrinsic service that computes extrinsic calibration with openCV.</desc>
    </extension>

    <extension implements="::sight::service::extension::Factory">
         <type>sight::geometry::vision::ICalibration</type>
         <service>sight::module::geometry::vision::SOpenCVIntrinsic</service>
         <object>sight::data::Camera</object>
         <desc>SOpenCVIntrinsic service that computes intrinsic calibration with openCV.</desc>
    </extension>

    <extension implements="::sight::service::extension::Factory">
         <type>sight::service::IRegisterer</type>
         <service>sight::module::geometry::vision::SPoseFrom2d</service>
         <desc>SPoseFrom2d Class used to compute the 3d pose of a object using 2d points.</desc>
    </extension>

    <extension implements="::sight::service::extension::Factory">
         <type>sight::service::IController</type>
         <service>sight::module::geometry::vision::SReprojectionError</service>
         <desc>SReprojectionError Class used to compute the mean error of reprojection between 3d object points</desc>
    </extension>
    <extension implements="::sight::service::extension::Factory">
         <type>sight::service::IRegisterer</type>
         <service>sight::module::geometry::vision::SSolvePnP</service>
         <object key="pointList2d">sight::data::PointList</object>
         <object key="pointList3d">sight::data::PointList</object>
         <object key="calibration">sight::data::Camera</object>
         <object key="matrix">sight::data::Matrix4</object>
         <desc>This service estimates the object pose given a set of object points, their corresponding image projections,</desc>
    </extension>

    <extension implements="::sight::service::extension::Factory">
         <type>sight::service::IController</type>
         <service>sight::module::geometry::vision::charuco::SCharucoBoardDetector</service>
         <object key="timeline">sight::data::FrameTL</object>
         <object key="calInfo">sight::data::CalibrationInfo</object>
         <object key="detection">sight::data::PointList</object>
         <desc>This service updates CalibrationInfo objects with the points detected from charuco board.</desc>
    </extension>

    <extension implements="::sight::service::extension::Factory">
         <type>sight::geometry::vision::ICalibration</type>
         <service>sight::module::geometry::vision::charuco::SOpenCVExtrinsic</service>
         <object key="calibrationInfo1">sight::data::CalibrationInfo</object>
         <object key="calibrationInfo2">sight::data::CalibrationInfo</object>
         <object key="camera">sight::data::CameraSeries</object>
         <desc>SOpenCVExtrinsic service that computes charuco extrinsic calibration with openCV.</desc>
    </extension>

    <extension implements="::sight::service::extension::Factory">
         <type>sight::geometry::vision::ICalibration</type>
         <service>sight::module::geometry::vision::charuco::SOpenCVIntrinsic</service>
         <object key="calibrationInfo">sight::data::CalibrationInfo</object>
         <object key="camera">sight::data::Camera</object>
         <object key="poseVector">sight::data::Vector</object>
         <desc>SOpenCVIntrinsic service that computes intrinsic charuco calibration with openCV.</desc>
    </extension>

</plugin>
