<plugin id="sight::module::ui" library="true">
     <requirement id="sight::module::service" />

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::SConfigLauncher</service>
          <desc>This action starts/stops a template configuration.</desc>
     </extension>

    <extension implements="sight::service::extension::Factory">
         <type>sight::ui::action</type>
         <service>sight::module::ui::SAction</service>
         <desc>Defines the default action to have a simple action button.</desc>
    </extension>

    <extension implements="sight::service::extension::Factory">
         <type>sight::ui::action</type>
         <service>sight::module::ui::SDefaultAction</service>
         <desc>Defines the default action to have a simple action button.</desc>
    </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::frame</type>
          <service>sight::module::ui::SFrame</service>
          <desc>Defines the default frame for standard application.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::dialog_editor</type>
          <service>sight::module::ui::SJobBar</service>
          <desc>Service displaying a progress bar.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::menu</type>
          <service>sight::module::ui::SMenu</service>
          <desc>Defines the default menu for standard application</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::menu_bar</type>
          <service>sight::module::ui::SMenuBar</service>
          <desc>Defines the default menubar for standard application</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::SModifyLayout</service>
          <desc>This action is used to modify the layout configuration.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::SQuit</service>
          <desc>This action tries to close the window and reset root object.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::toolbar</type>
          <service>sight::module::ui::SToolBar</service>
          <desc>Defines the default toolbar for standard application</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::view::IView</type>
          <service>sight::module::ui::SView</service>
          <desc>Defines the generic layout for application.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::com::SSignal</service>
          <desc>Action that sends a signal when it is triggered</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::com::SStarter</service>
          <desc>Apply an action (start, stop, ...) on a service specify by uid.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::com::STimestampSlotCaller</service>
          <object>sight::data::Object</object>
          <desc>Runs a slot given by HasSlot id and slot key and set the current timestamp in parameter.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::io::SFolderSelector</service>
          <object>sight::data::Object</object>
          <desc>Raise a pop-up dialog to select a directory, then send it via a signal.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::dialog_editor</type>
          <service>sight::module::ui::io::SSelector</service>
          <object>sight::data::Object</object>
          <desc>This service displays a list of available readers or writers and lets you select one to load or save a data.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::metrics::SRemoveDistance</service>
          <object key="image">sight::data::Image</object>
          <desc>This action removes distances from the image field.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::metrics::SShowDistance</service>
          <object key="image">sight::data::Image</object>
          <desc>This action allows to show/hide image distances.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::series::SDBMerger</service>
          <object>sight::data::SeriesSet</object>
          <desc>This action allows to load a new SeriesSet and merge it with the current SeriesSet</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::series::SExport</service>
          <object>sight::data::SeriesSet</object>
          <desc>This action allows to export the series specified in config to the SeriesSet.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::SExportSet</service>
          <object>sight::data::Set</object>
          <desc>This action allows to export an object specified in config to a Set container.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::series::SExportWithSeriesSet</service>
          <object>sight::data::Object</object>
          <desc>This action allows to export the current series using a temporary SeriesSet.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::series::SPushSelection</service>
          <object>sight::data::Vector</object>
          <desc>Push Series to SeriesSet</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::service::controller</type>
          <service>sight::module::ui::video::SImagePicker</service>
          <object>sight::data::PointList</object>
          <desc>This service listens to a picking interaction and fills the clicked point list.</desc>
     </extension>

     <extension implements="sight::service::extension::Factory">
          <type>sight::ui::action</type>
          <service>sight::module::ui::viz::CrossTypeAction</service>
          <object>sight::data::Image</object>
          <desc>This action allows change the cross type</desc>
     </extension>

    <extension implements="sight::service::extension::Factory">
         <type>sight::ui::action</type>
         <service>sight::module::ui::com::STimestampSignal</service>
         <desc>Action that sends a signal with the current timestamp when it is triggered</desc>
    </extension>
</plugin>
