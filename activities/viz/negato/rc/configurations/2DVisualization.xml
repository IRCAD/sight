<extension implements="sight::service::extension::AppConfig">
    <id>2DVisualization</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="SERIESDB" />
        <param name="AS_UID" />
        <param name="imageSeries" />
        <param name="landmarks" />
        <param name="advancedLandmarksEditor" default="true" />
        <param name="enabledPreviousChannel" default="enabledPreviousChannel" />
        <param name="enabledNextChannel" default="enabledNextChannel" />
        <param name="previousActivityChannel" default="previousActivityChannel" />
        <param name="nextActivityChannel" default="nextActivityChannel" />
    </parameters>
    <config>
        <object uid="${SERIESDB}" type="sight::data::SeriesDB" src="ref" />
        <object uid="${AS_UID}" type="sight::data::ActivitySeries" src="ref" />
        <object uid="${imageSeries}" type="sight::data::ImageSeries" src="ref" />
        <object uid="${landmarks}" type="sight::data::Landmarks" src="ref" />
        <object uid="image" type="sight::data::Image" src="deferred" />

        <service uid="mainView" type="sight::module::ui::base::SView">
            <gui>
                <layout type="sight::ui::base::CardinalLayoutManager">
                    <view caption="Negato1" align="center" />
                    <view caption="Negato2" align="right" />
                    <view caption="Negato3" align="right" />
                    <view align="left" visible="false" />
                </layout>
                <toolBar />
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <toolBar sid="toolBar" />
                <view wid="view_negato1" />
                <view wid="view_negato2" />
                <view wid="view_negato3" />
                <view sid="landmarksEditor" />
            </registry>
        </service>

        <service uid="toolBar" type="sight::module::ui::base::SToolBar">
            <gui>
                <layout>
                    <menuItem name="Previous" icon="sight::module::ui::icons/Back.svg" />
                    <menuItem name="Next" icon="sight::module::ui::icons/Next.svg" />
                    <menuItem name="Load landmark" icon="sight::module::ui::icons/Load-landmark.png" />
                    <menuItem name="Save landmark" icon="sight::module::ui::icons/Save-landmark.png" />
                    <!-- <menuItem name="Focus landmark" icon="sight::module::ui::icons/Find-landmark.png" /> -->
                    <menuItem name="Display Landmarks editor" icon="sight::module::ui::icons/View-landmark.png" style="check" />
                    <separator />
                    <menuItem name="Add distance" icon="sight::module::ui::icons/distance.png" />
                    <menuItem name="Remove distance" icon="sight::module::ui::icons/RemoveDistance.png" />
                    <menuItem name="Hide distance" icon="sight::module::ui::icons/HideDistance.png" style="check" />
                    <separator />
                    <menuItem name="Hide cross" icon="sight::module::ui::icons/HideCross.png" style="radio" />
                    <menuItem name="Show normal cross" icon="sight::module::ui::icons/NormalCross.png" style="radio" />
                    <menuItem name="Show full cross" icon="sight::module::ui::icons/FullCross.png" style="radio" />
                    <separator />
                    <menuItem name="Export Activity" icon="sight::module::ui::icons/Export.svg" />
                </layout>
            </gui>
            <registry>
                <menuItem sid="ActionPrevious" />
                <menuItem sid="ActionNext" />
                <menuItem sid="ActionLoadLandmark" />
                <menuItem sid="ActionSaveLandmark" />
                <!-- <menuItem sid="ActionSFocusLandmark"  /> -->
                <menuItem sid="ActionEditLandmark" />
                <menuItem sid="ActionAddDistance" />
                <menuItem sid="ActionRemoveDistance" />
                <menuItem sid="ActionHideDistance" />
                <menuItem sid="ActionHideCross" />
                <menuItem sid="ActionShowNormalCross" />
                <menuItem sid="ActionShowFullCross" />
                <menuItem sid="ActionExportActivity" />
            </registry>
        </service>

        <service uid="cfgNegato1" type="sight::service::SConfigController">
            <appConfig id="2DNegato" />
            <inout key="image" uid="image" />
            <inout key="landmarks" uid="${landmarks}" />
            <parameter replace="WID_PARENT" by="view_negato1" />
            <parameter replace="CrossTypeChannel" by="crossTypeChannel" />
            <parameter replace="PickingChannel" by="pickerChannel" />
            <parameter replace="orientation" by="axial" />
        </service>

        <service uid="cfgNegato2" type="sight::service::SConfigController">
            <appConfig id="2DNegato" />
            <inout key="image" uid="image" />
            <inout key="landmarks" uid="${landmarks}" />
            <parameter replace="WID_PARENT" by="view_negato2" />
            <parameter replace="CrossTypeChannel" by="crossTypeChannel" />
            <parameter replace="PickingChannel" by="pickerChannel" />
            <parameter replace="orientation" by="frontal" />
        </service>

        <service uid="cfgNegato3" type="sight::service::SConfigController">
            <appConfig id="2DNegato" />
            <inout key="image" uid="image" />
            <inout key="landmarks" uid="${landmarks}" />
            <parameter replace="WID_PARENT" by="view_negato3" />
            <parameter replace="CrossTypeChannel" by="crossTypeChannel" />
            <parameter replace="PickingChannel" by="pickerChannel" />
            <parameter replace="orientation" by="sagittal" />
        </service>

        <service uid="ActionExportActivity" type="sight::module::ui::base::series::SExport" autoConnect="true">
            <inout key="seriesDB" uid="${SERIESDB}" />
            <inout key="series" uid="${AS_UID}" />
        </service>

        <service uid="landmarksEditor" type="sight::module::ui::qt::metrics::SLandmarks" autoConnect="true">
            <inout key="landmarks" uid="${landmarks}" />
            <advanced>${advancedLandmarksEditor}</advanced>
        </service>

        <!-- <service uid="ActionSFocusLandmark" type="sight::module::ui::base::metrics::SFocusLandmark" >
            <in key="landmarks" uid="${landmarks}" autoConnect="true" />
            <inout key="image" uid="image" />
        </service> -->

        <service uid="ActionLoadLandmark" type="sight::module::ui::base::com::SSlotCaller">
            <slots>
                <slot>LoadLandmark/update</slot>
            </slots>
        </service>

        <service uid="ActionSaveLandmark" type="sight::module::ui::base::com::SSlotCaller">
            <slots>
                <slot>SaveLandmark/update</slot>
            </slots>
        </service>

        <service uid="ActionEditLandmark" type="sight::module::ui::base::com::SBooleanSlotCaller">
            <slots>
                <slot>landmarksEditor/setVisible</slot>
            </slots>
        </service>
        <service uid="ActionAddDistance" type="sight::module::ui::base::metrics::SAddDistance">
            <inout key="image" uid="image" />
        </service>
        <service uid="ActionRemoveDistance" type="sight::module::ui::base::metrics::SRemoveDistance">
            <inout key="image" uid="image" />
        </service>
        <service uid="ActionHideDistance" type="sight::module::ui::base::metrics::SShowDistance" autoConnect="true">
            <inout key="image" uid="image" />
        </service>

        <!-- The action "previous" and "next" are visible only if the application use a "SSequencer".
             This service send signals to enable or not the actions. -->
        <service uid="ActionPrevious" type="sight::module::ui::base::com::SSignal">
            <state visible="false" />
        </service>

        <service uid="ActionNext" type="sight::module::ui::base::com::SSignal">
            <state visible="false" />
        </service>

        <service uid="LoadLandmark" type="sight::module::ui::base::io::SSelector">
            <inout key="data" uid="${landmarks}" />
            <type mode="reader" />
            <selection mode="include" />
            <addSelection service="sight::module::io::session::SReader" />
            <config id="LandmarksConfig" service="sight::module::io::session::SReader" />
        </service>

        <service uid="SaveLandmark" type="sight::module::ui::base::io::SSelector">
            <inout key="data" uid="${landmarks}" />
            <type mode="writer" />
            <selection mode="include" />
            <addSelection service="sight::module::io::session::SWriter" />
            <config id="LandmarksConfig" service="sight::module::io::session::SWriter" />
        </service>

        <service uid="ActionHideCross" type="sight::module::ui::base::viz::CrossTypeAction">
            <in key="image" uid="image" />
            <crossType>hide</crossType>
        </service>
        <service uid="ActionShowNormalCross" type="sight::module::ui::base::viz::CrossTypeAction">
            <in key="image" uid="image" />
            <crossType>half</crossType>
            <state checked="true" />
        </service>
        <service uid="ActionShowFullCross" type="sight::module::ui::base::viz::CrossTypeAction">
            <in key="image" uid="image" />
            <crossType>full</crossType>
        </service>

        <service uid="extractImageSrv" type="sight::module::data::SGetImage">
            <in key="imageSeries" uid="${imageSeries}" />
            <out key="image" uid="image" />
        </service>

        <connect channel="crossTypeChannel">
            <signal>ActionHideCross/crossTypeModified</signal>
            <signal>ActionShowNormalCross/crossTypeModified</signal>
            <signal>ActionShowFullCross/crossTypeModified</signal>
        </connect>

        <connect channel="pickerChannel">
            <slot>landmarksEditor/addPickedPoint</slot>
        </connect>

        <!-- Connection to enable "previous" action. It should be connected to a SSequencer in the application
             configuration.-->
        <connect channel="${enabledPreviousChannel}">
            <slot>ActionExportActivity/hide</slot>
            <slot>ActionPrevious/show</slot>
            <slot>ActionPrevious/setEnabled</slot>
        </connect>

        <!-- Connection to called 'previous' slot of the application's SSequencer. -->
        <connect channel="${previousActivityChannel}">
            <signal>ActionPrevious/triggered</signal>
        </connect>

        <!-- Connection to enable "next" action. It should be connected to a SSequencer in the application
             configuration.-->
        <connect channel="${enabledNextChannel}">
            <slot>ActionExportActivity/hide</slot>
            <slot>ActionNext/show</slot>
            <slot>ActionNext/setEnabled</slot>
        </connect>

        <!-- Connection to called 'next' slot of the application's SSequencer. -->
        <connect channel="${nextActivityChannel}">
            <signal>ActionNext/triggered</signal>
        </connect>

        <!-- START AND STOP SERVICES -->
        <start uid="mainView" />
        <start uid="extractImageSrv" />
        <start uid="toolBar" />
        <start uid="landmarksEditor" />
        <start uid="ActionPrevious" />
        <start uid="ActionNext" />
        <start uid="ActionLoadLandmark" />
        <start uid="ActionSaveLandmark" />
        <start uid="ActionEditLandmark" />
        <start uid="ActionAddDistance" />
        <start uid="ActionRemoveDistance" />
        <start uid="ActionHideDistance" />
        <start uid="ActionHideCross" />
        <start uid="ActionShowNormalCross" />
        <start uid="ActionShowFullCross" />
        <start uid="ActionExportActivity" />

        <start uid="cfgNegato1" />
        <start uid="cfgNegato2" />
        <start uid="cfgNegato3" />

        <start uid="LoadLandmark" />
        <start uid="SaveLandmark" />

        <!-- UPDATE SERVICES -->
        <update uid="extractImageSrv" />

    </config>
</extension>