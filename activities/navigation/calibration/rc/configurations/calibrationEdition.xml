<extension implements="::sight::service::extension::AppConfig">
    <id>calibrationEdition</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="SERIESDB" />
        <param name="cameraSeries" />
    </parameters>
    <config>

        <!-- ******************************* Objects declaration ****************************** -->

        <object uid="${SERIESDB}" type="sight::data::SeriesDB" src="ref" />
        <object uid="${cameraSeries}" type="sight::data::CameraSeries" src="ref" />

        <object uid="newCameraSeries" type="sight::data::CameraSeries" src="deferred" />
        <object uid="camera0" type="sight::data::Camera" src="deferred" />
        <object uid="camera1" type="sight::data::Camera" src="deferred" />

        <!-- ******************************* UI declaration *********************************** -->

        <service uid="mainView" type="sight::module::ui::base::SView">
            <gui>
                <toolBar/>
                <layout type="sight::ui::base::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                    <view proportion="0" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <toolBar sid="toolBarView" start="true" />
                <view sid="camerasView" start="true" />
                <view sid="videoSliderSrv" start="true" />
                <view sid="cameraInfoView" start="true" />
            </registry>
        </service>

        <service uid="toolBarView" type="sight::module::ui::base::SToolBar">
            <gui>
                <layout>
                    <menuItem name="Export camera series" icon="sight::module::ui::flaticons/BlueSave.svg" />
                    <separator/>
                    <menuItem name="Export xml/yaml" icon="sight::module::ui::flaticons/BlueFile.svg" />
                    <separator/>
                    <menuItem name="Start" icon="sight::module::ui::flaticons/GreenStart.svg" shortcut="Space" />
                    <menuItem name="Stop" icon="sight::module::ui::flaticons/RedStop.svg" />
                    <menuItem name="Pause" icon="sight::module::ui::flaticons/OrangePause.svg" shortcut="Space" />
                    <menuItem name="Loop" icon="sight::module::ui::flaticons/OrangeLoop.svg" style="check" />
                </layout>
            </gui>
            <registry>
                <menuItem sid="exportAct" start="false" />
                <menuItem sid="writeCalibrationAct" start="true" />
                <menuItem sid="startVideoAct" start="true" />
                <menuItem sid="stopVideoAct" start="true" />
                <menuItem sid="pauseVideoAct" start="true" />
                <menuItem sid="loopVideoAct" start="true" />
            </registry>
        </service>

        <service uid="camerasView" type="sight::module::ui::base::SView">
            <gui>
                <layout type="sight::ui::base::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view proportion="0" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view wid="camera0View" />
                <view wid="camera1View" />
            </registry>
        </service>

        <service uid="cameraInfoView" type="sight::module::ui::base::SView">
            <gui>
                <layout type="sight::ui::base::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view caption="camera 1" />
                    <view caption="camera 2" />
                    <view caption="camera series" />
                </layout>
            </gui>
            <registry>
                <view sid="cameraInfo1Srv" start="false" />
                <view sid="cameraInfo2Srv" start="false" />
                <view sid="cameraSeriesInfoSrv" start="false" />
            </registry>
        </service>

        <!-- ************************************* Action ************************************ -->

        <service uid="writeCalibrationAct" type="sight::module::ui::base::com::SSlotCaller">
            <slots>
                <slot>CalibrationXmlWriter/update</slot>
            </slots>
        </service>

        <service uid="exportAct" type="sight::module::ui::base::series::SExport" autoConnect="true">
            <inout key="seriesDB" uid="${SERIESDB}" />
            <inout key="series" uid="newCameraSeries" />
        </service>

        <service uid="CalibrationXmlWriter" type="sight::module::io::vision::SOpenCVWriter">
            <in key="data" uid="newCameraSeries"/>
        </service>

        <service uid="startVideoAct" type="sight::module::ui::base::com::SSlotCaller">
            <slots>
                <slot>videoGrabber1Srv/startCamera</slot>
                <slot>videoGrabber2Srv/startCamera</slot>
            </slots>
        </service>

        <service uid="stopVideoAct" type="sight::module::ui::base::com::SSlotCaller">
            <slots>
                <slot>videoGrabber1Srv/stopCamera</slot>
                <slot>videoGrabber2Srv/stopCamera</slot>
            </slots>
        </service>

        <service uid="pauseVideoAct" type="sight::module::ui::base::com::SSlotCaller">
            <slots>
                <slot>videoGrabber1Srv/pauseCamera</slot>
                <slot>videoGrabber2Srv/pauseCamera</slot>
            </slots>
        </service>

        <service uid="loopVideoAct" type="sight::module::ui::base::com::SSlotCaller">
            <slots>
                <slot>videoGrabber1Srv/loopVideoAct</slot>
                <slot>videoGrabber2Srv/loopVideoAct</slot>
            </slots>
        </service>

        <!-- ************************ Configuration launchers ********************************* -->

        <service uid="camera0LauncherCfg" type="sight::service::SConfigController">
            <appConfig id="videoEdition" />
            <inout key="camera" uid="camera0" />
            <parameter replace="WID_PARENT" by="camera0View" />
            <parameter replace="videoGrabber" by="videoGrabber1Srv" />
            <parameter replace="grabberProxyGuiTitle" by="Please select the first video grabber" />
            <parameter replace="cameraModifiedChannel" by="cameraModified" />
            <parameter replace="videoPositionChangedChannel" by="videoPositionChanged" />
            <parameter replace="videoPositionModifiedChannel" by="videoPositionModified" />
            <parameter replace="videoDurationModifiedChannel" by="videoDurationModified" />
        </service>

        <service uid="camera1LauncherCfg" type="sight::service::SConfigController">
            <appConfig id="videoEdition" />
            <inout key="camera" uid="camera1" />
            <parameter replace="WID_PARENT" by="camera1View" />
            <parameter replace="videoGrabber" by="videoGrabber2Srv" />
            <parameter replace="grabberProxyGuiTitle" by="Please select the second video grabber" />
            <parameter replace="cameraModifiedChannel" by="cameraModified" />
            <parameter replace="videoPositionChangedChannel" by="videoPositionChanged" />
            <parameter replace="videoPositionModifiedChannel" by="videoPositionModified" />
            <parameter replace="videoDurationModifiedChannel" by="videoDurationModified" />
        </service>

        <!-- ************************************* Services ************************************ -->

        <service uid="videoSliderSrv" type="sight::module::ui::qt::video::SSlider" />

        <service uid="copyCameraSeriesSrv" type="sight::module::data::SCopy">
            <in key="source" uid="${cameraSeries}" />
            <out key="target" uid="newCameraSeries" />
        </service>

        <service uid="extractCamerasSrv" type="sight::module::data::SExtractObj">
            <inout key="source" uid="newCameraSeries">
                <extract from="@cameras.0" />
                <extract from="@cameras.1" />
            </inout>
            <out group="target">
                <key uid="camera0" />
                <key uid="camera1" />
            </out>
        </service>

        <service uid="cameraSeriesInfoSrv" type="sight::module::ui::qt::calibration::SCameraSeriesEditor">
            <in key="cameraSeries" uid="${cameraSeries}" autoConnect="true" />
            <in key="notUsed" uid="camera1" />
            <!-- Not used, it allows to start this service only if we have a stereo calibration -->
        </service>

        <service uid="cameraInfo1Srv" type="sight::module::ui::qt::calibration::SCameraInformationEditor" autoConnect="true">
            <in key="camera" uid="camera0" />
        </service>

        <service uid="cameraInfo2Srv" type="sight::module::ui::qt::calibration::SCameraInformationEditor" autoConnect="true">
            <in key="camera" uid="camera1" />
        </service>

        <!-- ******************************* Connections ***************************************** -->

        <connect channel="cameraModified">
            <signal>camera0/idModified</signal>
            <signal>camera1/idModified</signal>
        </connect>

        <connect channel="videoPositionChanged">
            <signal>videoSliderSrv/positionChanged</signal>
        </connect>

        <connect channel="videoPositionModified">
            <slot>videoSliderSrv/setPositionSlider</slot>
        </connect>

        <connect channel="videoDurationModified">
            <slot>videoSliderSrv/setDurationSlider</slot>
        </connect>

        <!-- ******************************* Start/Stop services ***************************************** -->

        <start uid="mainView" />
        <start uid="copyCameraSeriesSrv" />
        <start uid="extractCamerasSrv" />
        <start uid="cameraSeriesInfoSrv" />
        <start uid="CalibrationXmlWriter" />
        <start uid="exportAct" />
        <start uid="cameraInfo1Srv" />
        <start uid="cameraInfo2Srv" />
        <start uid="camera0LauncherCfg" />
        <start uid="camera1LauncherCfg" />

        <update uid="copyCameraSeriesSrv" />
        <update uid="extractCamerasSrv" />

    </config>
</extension>
