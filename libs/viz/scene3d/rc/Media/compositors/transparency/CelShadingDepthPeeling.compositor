compositor CelShadingDepthPeeling
{
    technique
    {

        // Color buffer - used for blending
        texture gbuffer target_width target_height PF_R8G8B8A8
        // Ping buffer
        // Color Depth Alpha Normal
        texture ping_buffer target_width target_height PF_R8G8B8A8 PF_R8G8B8A8 PF_R8G8B8A8
        // Pong buffer
        // Color Depth Alpha Normal
        texture pong_buffer target_width target_height PF_R8G8B8A8 PF_R8G8B8A8 PF_R8G8B8A8
        // Depth map
        texture depth_map target_width target_height PF_R8G8B8A8
        // Fake texture for the first peel
        texture init_buffer target_width target_height PF_R8G8B8A8 depth_pool 0

        // Depth map buffer
        // Used as a stencil for the surrounding background
        target depth_map
        {
            input none
            pass clear
            {
            }

            shadows off
            material_scheme DepthPeeling/depthMap

            pass render_scene
            {
            }
        }

        // Init the fake depth texture used for the first peel
        target init_buffer
        {
            input none
            pass render_quad
            {
               material ClearDepth
            }
        }

         // Peel 0
         target ping_buffer
         {
             input none
             pass clear
             {
             }

             shadows off
             material_scheme CelShadingDepthPeeling/peel_init

             pass render_scene
             {
             }
         }

         // Init blend buffer
         target gbuffer
         {
             input none
             pass clear
             {
                colour_value 0 0 0 1
             }
             pass render_quad
             {
                 material CelShadingDepthPeeling/blend
                 // color
                 input 0 ping_buffer 0
                 // depth
                 input 1 ping_buffer 1
                 // normal
                 input 2 ping_buffer 2
             }
         }

         // Peel 1
         target pong_buffer
         {
             input none
             pass clear
             {
             }

             shadows off
             material_scheme CelShadingDepthPeeling/peel_pong

             pass render_scene
             {
             }
         }

         // Blend 1
         target gbuffer
         {
             input none
             pass render_quad
             {
                 material CelShadingDepthPeeling/blend
                 // color
                 input 0 pong_buffer 0
                 // depth
                 input 1 pong_buffer 1
                 // normal
                 input 2 pong_buffer 2
             }
         }

         // Peel 2
         target ping_buffer
         {
             input none
             pass clear
             {
             }

             shadows off
             material_scheme CelShadingDepthPeeling/peel_ping

             pass render_scene
             {
             }
         }

         // Blend 2
         target gbuffer
         {
             input none
             pass render_quad
             {
                 material CelShadingDepthPeeling/blend
                 // color
                 input 0 ping_buffer 0
                 // depth
                 input 1 ping_buffer 1
                 // normal
                 input 2 ping_buffer 2
             }
         }

         // Peel 3
         target pong_buffer
         {
             input none
             pass clear
             {
             }

             shadows off
             material_scheme CelShadingDepthPeeling/peel_pong

             pass render_scene
             {
             }
         }

         // Blend 3
         target gbuffer
         {
             input none
             pass render_quad
             {
                 material CelShadingDepthPeeling/blend
                 // color
                 input 0 pong_buffer 0
                 // depth
                 input 1 pong_buffer 1
                 // normal
                 input 2 pong_buffer 2
             }
         }

        // Final pass
        target_output
        {
            input none
            pass render_quad
            {
                material DepthPeeling/Final
                input 0 gbuffer
                // stencil
                input 1 depth_map
            }
        }
    }
}
