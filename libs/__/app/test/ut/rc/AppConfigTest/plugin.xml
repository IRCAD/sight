<plugin id="config_test" >

    <extension implements="sight::app::extension::config">
        <id>parametersConfigTest1</id>
        <parameters>
            <param name="TEST_IMAGE" />
            <param name="UID_SERVICE2" default="myTestService2" />
        </parameters>
        <desc>Test configuration with parameters</desc>
        <config>
            <object uid="${TEST_IMAGE}" type="sight::data::image" />

            <service uid="myTestService1" type="sight::app::ut::test1_image" auto_connect="false">
                <in key="data" uid="${TEST_IMAGE}" />
            </service>

            <service uid="${UID_SERVICE2}" type="sight::app::ut::test1_image" />

            <connect channel="channel1">
                <signal>${TEST_IMAGE}/modified</signal>
                <slot>myTestService1/update</slot>
            </connect>

            <start uid="myTestService1" />
            <start uid="${UID_SERVICE2}" />

            <update uid="myTestService1" />
        </config>
    </extension>


    <extension implements="sight::app::extension::config">
        <id>startStopTest</id>
        <desc>Test configuration for start and stop</desc>
        <config>

            <object uid="data1Id" type="sight::data::image" />
            <object uid="data2Id" type="sight::data::image" src="deferred" />
            <object uid="data3Id" type="sight::data::image" />
            <object uid="data4Id" type="sight::data::image" src="deferred" />

            <!-- Service used to generate data -->
            <service uid="SGenerateData" type="sight::app::ut::test_out">
                <out key="out2" uid="data2Id" />
                <out key="out4" uid="data4Id" />
            </service>

            <service uid="TestService1Uid" type="sight::app::ut::test_no_data" />
            <service uid="TestService2Uid" type="sight::app::ut::test_no_data" />
            <service uid="TestService3Uid" type="sight::app::ut::test1_opt_input">
                <in key="data1" uid="data2Id" />
            </service>
            <service uid="TestService4Uid" type="sight::app::ut::test1_input">
                <in key="data1" uid="data2Id" />
            </service>
            <service uid="TestService5Uid" type="sight::app::ut::test4_inputs">
                <in key="data1" uid="data1Id" />
                <in key="data2" uid="data2Id" optional="false"/>
                <in key="data3" uid="data3Id" optional="false"/>
                <in key="data4" uid="data4Id" optional="false"/>
            </service>

            <start uid="SGenerateData" />
            <start uid="TestService1Uid" />
            <start uid="TestService2Uid" />
            <start uid="TestService3Uid" />
            <start uid="TestService5Uid" />
            <start uid="TestService4Uid" />

            <update uid="TestService1Uid" />
            <update uid="TestService4Uid" />
            <update uid="TestService5Uid" />

        </config>
    </extension>

    <extension implements="sight::app::extension::config">
        <id>autoConnectTest</id>
        <desc>Test configuration for auto connect</desc>
        <config>

            <object uid="data1Id" type="sight::data::image" />
            <object uid="data2Id" type="sight::data::image" />
            <object uid="data3Id" type="sight::data::image" src="deferred" />

            <!-- Service used to generate data -->
            <service uid="SGenerateData" type="sight::app::ut::test_out">
                <out key="out3" uid="data3Id" />
            </service>

            <service uid="TestService1Uid" type="sight::app::ut::test1_input">
                <in key="data1" uid="data1Id" />
            </service>
            <service uid="TestService2Uid" type="sight::app::ut::test2_inputs" auto_connect="true">
                <in key="data1" uid="data1Id" />
                <in key="data2" uid="data2Id" />
            </service>
            <service uid="TestService3Uid" type="sight::app::ut::test2_inputs_v2">
                <in key="data1" uid="data1Id" auto_connect="true" />
                <in key="data2" uid="data2Id" auto_connect="true" />
            </service>
            <service uid="TestService4Uid" type="sight::app::ut::test1_input">
                <in key="data1" uid="data3Id" />
            </service>
            <service uid="TestService5Uid" type="sight::app::ut::test2_inputs_v2" auto_connect="true">
                <in key="data1" uid="data1Id" />
                <in key="data2" uid="data3Id" />
            </service>

            <start uid="SGenerateData" />
            <start uid="TestService1Uid" />
            <start uid="TestService2Uid" />
            <start uid="TestService3Uid" />
            <start uid="TestService5Uid" />
            <start uid="TestService4Uid" />

        </config>
    </extension>

    <extension implements="sight::app::extension::config">
        <id>connectionTest</id>
        <desc>Test configuration for connections</desc>
        <config>

            <object uid="data1Id" type="sight::data::image" />
            <object uid="data2Id" type="sight::data::image" src="deferred" />
            <object uid="data3Id" type="sight::data::image" src="deferred" />
            <object uid="data4Id" type="sight::data::image" />

            <!-- Service used to generate data -->
            <service uid="SGenerateData" type="sight::app::ut::test_out">
                <out key="out2" uid="data2Id" />
                <out key="out3" uid="data3Id" />
            </service>

            <service uid="TestService1Uid" type="sight::app::ut::test_no_data" />
            <service uid="TestService2Uid" type="sight::app::ut::test1_input" >
                <in key="data1" uid="data1Id" />
            </service>
            <service uid="TestService3Uid" type="sight::app::ut::test1_input1_output2_inouts">
                <in key="data1" uid="data1Id" />
                <out key="data2" uid="data2Id" />
                <inout key="data3" uid="data3Id" />
                <inout key="data4" uid="data4Id" />
            </service>
            <service uid="TestService4Uid" type="sight::app::ut::test_no_data" />

            <connect>
                <signal>data1Id/modified</signal>
                <slot>TestService1Uid/update</slot>
            </connect>

            <connect channel="2">
                <signal>data1Id/modified</signal>
                <slot>TestService2Uid/update</slot>
                <slot>TestService3Uid/update</slot>
            </connect>

            <connect>
                <signal>data2Id/modified</signal>
                <slot>TestService1Uid/update</slot>
                <slot>TestService3Uid/update</slot>
            </connect>

            <connect channel="4">
                <signal>data3Id/modified</signal>
                <signal>data4Id/modified</signal>
                <slot>TestService2Uid/update</slot>
                <slot>TestService3Uid/update</slot>
            </connect>

            <connect>
                <signal>TestService3Uid/started</signal>
                <slot>TestService4Uid/update</slot>
            </connect>

            <connect>
                <signal>TestService3Uid/stopped</signal>
                <slot>TestService4Uid/update2</slot>
            </connect>

            <start uid="SGenerateData" />
            <start uid="TestService1Uid" />
            <start uid="TestService2Uid" />
            <start uid="TestService3Uid" />
            <start uid="TestService4Uid" />

        </config>
    </extension>

    <extension implements="sight::app::extension::config">
        <id>startStopConnectionTest</id>
        <desc>Test configuration for start/stop connections</desc>
        <config>

            <service uid="TestService5Uid" type="sight::app::ut::test_no_data" />
            <service uid="TestService6Uid" type="sight::app::ut::test_no_data" />
            <service uid="TestService7Uid" type="sight::app::ut::test_no_data" />

            <connect>
                <signal>TestService5Uid/updated</signal>
                <slot>TestService6Uid/start</slot>
            </connect>

            <connect>
                <signal>TestService5Uid/signal1</signal>
                <slot>TestService6Uid/stop</slot>
            </connect>

            <connect>
                <signal>TestService6Uid/updated</signal>
                <slot>TestService7Uid/stop</slot>
            </connect>

            <start uid="TestService5Uid" />
            <start uid="TestService7Uid" />

        </config>
    </extension>

    <extension implements="sight::app::extension::config">
        <id>optionalKeyTest</id>
        <desc>Test configuration for optional keys</desc>
        <config>

            <object uid="data1Id" type="sight::data::image" />
            <object uid="data2Id" type="sight::data::boolean" src="deferred" />
            <object uid="data3Id" type="sight::data::boolean" src="deferred" />
            <object uid="data4Id" type="sight::data::boolean" src="deferred" />
            <object uid="data5Id" type="sight::data::boolean" src="deferred" />

            <!-- Service used to generate data -->
            <service uid="SGenerateData" type="sight::app::ut::test_out">
                <out key="out2" uid="data2Id" />
                <out key="out3" uid="data3Id" />
                <out key="out4" uid="data4Id" />
                <out key="out5" uid="data5Id" />
            </service>

            <service uid="SGenerateData2" type="sight::app::ut::test_out">
                <out key="out" uid="data2Id" />
            </service>

            <service uid="TestService1Uid" type="sight::app::ut::test4_inputs">
                <in key="data1" uid="data1Id" auto_connect="true" />
                <in key="data2" uid="data2Id" auto_connect="false" />
                <in key="data3" uid="data3Id" auto_connect="false" />
                <in key="data4" uid="data4Id" auto_connect="true" />
            </service>
            <service uid="TestService2Uid" type="sight::app::ut::test4_inputs" >
                <in key="data1" uid="data5Id" auto_connect="true" />
                <in key="data2" uid="data2Id" auto_connect="false" />
                <in key="data3" uid="data3Id" auto_connect="false" />
                <in key="data4" uid="data4Id" auto_connect="true" />
            </service>

            <connect>
                <signal>data3Id/modified</signal>
                <slot>TestService1Uid/update</slot>
                <slot>TestService2Uid/update</slot>
            </connect>


            <start uid="SGenerateData" />
            <start uid="SGenerateData2" />
            <start uid="TestService1Uid" />
            <start uid="TestService2Uid" />

        </config>
    </extension>


    <extension implements="sight::app::extension::config">
        <id>keyGroupTest</id>
        <desc>Test configuration for key groups</desc>
        <config>

            <object uid="data1Id" type="sight::data::string" />
            <object uid="data2Id" type="sight::data::boolean" src="deferred" />
            <object uid="data3Id" type="sight::data::image" src="deferred" />
            <object uid="data4Id" type="sight::data::image" />
            <object uid="data5Id" type="sight::data::image" />
            <object uid="data6Id" type="sight::data::image" src="deferred" />
            <object uid="data7Id" type="sight::data::image" src="deferred" />

            <!-- Service used to generate data -->
            <service uid="SGenerateData" type="sight::app::ut::test_out">
                <out key="out2" uid="data2Id" />
                <out key="out3" uid="data3Id" />
                <out group="outGroup">
                    <key uid="data6Id" />
                    <key uid="data7Id" />
                </out>
            </service>

            <service uid="TestService1Uid" type="sight::app::ut::test1_input1_input_group">
                <in key="data1" uid="data1Id" auto_connect="true" />
                <in group="dataGroup" auto_connect="true">
                    <key uid="data2Id" />
                    <key uid="data3Id" optional="true" />
                </in>
            </service>

            <service uid="TestService2Uid" type="sight::app::ut::test2_input_groups" >
                <in group="dataGroup0">
                    <key uid="data1Id" />
                    <key uid="data2Id" auto_connect="true" optional="true"/>
                </in>
                <in group="dataGroup1">
                    <key uid="data3Id" />
                    <key uid="data4Id" auto_connect="true" />
                    <key uid="data5Id" />
                </in>
            </service>

            <service uid="TestService3Uid" type="sight::app::ut::test1_input1_input_group">
                <in key="data1" uid="data1Id" auto_connect="true" />
                <in group="dataGroup" auto_connect="true">
                    <key uid="data6Id" />
                    <key uid="data7Id" />
                </in>
            </service>

            <connect>
                <signal>data1Id/modified</signal>
                <slot>TestService2Uid/update</slot>
            </connect>


            <start uid="SGenerateData" />
            <start uid="TestService1Uid" />
            <start uid="TestService2Uid" />
            <start uid="TestService3Uid" />

        </config>
    </extension>


    <extension implements="sight::app::extension::config">
        <id>parameterReplaceTest</id>
        <parameters>
            <param name="data1" default="data1Id" />
        </parameters>
        <desc>Test configuration for parameter replace</desc>
        <config>

            <object uid="${data1}" type="sight::data::string"  />
            <object uid="data2Id" type="sight::data::boolean" />

            <service uid="TestService1Uid" type="sight::app::ut::test2_inputs">
                <in key="data1" uid="${data1}" />
                <in key="data2" uid="data2Id" />
                <view wid="view1" />
            </service>

            <service uid="TestService2Uid" type="sight::app::config_controller" >
                <appConfig id="parameterReplaceTestSubConfig" />
                <inout group="data">
                    <key name="data1" uid="${data1}" />
                    <key name="data2" uid="data2Id" />
                </inout>
                <parameter replace="patient" by="name" />
                <parameter replace="channel1" by="Channel No5" />
                <parameter replace="channel2" by="disneyChannel" />
                <parameter replace="WID_PARENT" by="view1" />
            </service>

            <connect channel="disneyChannel">
                <slot>TestService1Uid/update</slot>
            </connect>

            <connect channel="Channel No5">
                <signal>data2Id/modified</signal>
                <slot>TestService2Uid/update</slot>
            </connect>

            <start uid="TestService1Uid" />
            <start uid="TestService2Uid" />

        </config>
    </extension>

    <extension implements="sight::app::extension::config">
        <id>parameterReplaceTestSubConfig</id>
        <parameters>
            <param name="data1" />
            <param name="data2" />
            <param name="patient" />
            <param name="channel1" />
            <param name="channel2" />
            <param name="WID_PARENT" />
        </parameters>
        <desc>Test configuration for parameter replace</desc>
        <config>

            <object uid="${data1}" type="sight::data::string" src="ref" />
            <object uid="${data2}" type="sight::data::boolean" src="ref"  />

            <service uid="TestServiceUid" type="sight::app::ut::test2_inputs">
                <in key="data1" uid="${data1}" />
                <in key="data2" uid="${data2}" />
                <view wid="${WID_PARENT}" />
            </service>

            <connect channel="${channel1}">
                <slot>TestServiceUid/update</slot>
            </connect>

            <connect channel="${channel2}">
                <signal>${data1}/modified</signal>
            </connect>

            <start uid="TestServiceUid" />

        </config>
    </extension>


    <extension implements="sight::app::extension::config">
        <id>objectConfigTest</id>
        <desc>Test configuration for start and stop</desc>
        <config>

            <object uid="compo1Id" type="sight::data::composite">
                <item key="dataInComposite">
                    <object uid="data2Id" type="sight::data::string">
                        <value>Hello</value>
                    </object>
                </item>
            </object>

            <service uid="TestService1Uid" type="sight::app::ut::test1_input" config="serviceConfigTest">
                <in key="data1" uid="compo1Id" />
            </service>

            <start uid="TestService1Uid" />

        </config>
    </extension>

    <extension implements="sight::service::extension::config">
        <id>serviceConfigTest</id>
        <service>sight::app::ut::test1_input</service>
        <desc>service configuration for unit test</desc>
        <config>
            <param1>value1</param1>
            <param2>value2</param2>
        </config>
    </extension>

    <extension implements="sight::app::extension::config">
        <id>multi_cfg_ctl_1</id>
        <desc>Test configuration for multi_config_controller_1</desc>
        <config>

            <service uid="srv" type="sight::app::ut::test_no_data" />

            <start uid="srv" />

        </config>
    </extension>

    <extension implements="sight::app::extension::config">
        <id>multi_cfg_ctl_2</id>
        <desc>Test configuration for multi_config_controller_2</desc>
        <config>

            <service uid="srv" type="sight::app::ut::test_no_data" />

            <start uid="srv" />

        </config>
    </extension>

</plugin>
